diff -u vgabios-0.5a/Makefile emerald_bios_src/Makefile
--- vgabios-0.5a/Makefile	2005-03-06 07:08:17.000000000 -0600
+++ emerald_bios_src/Makefile	2005-10-03 19:01:52.037922000 -0500
@@ -14,7 +14,7 @@
 
 VGABIOS_DATE = "-DVGABIOS_DATE=\"$(RELDATE)\""
 
-all: bios cirrus-bios
+all: bios
 
 
 bios: biossums vgabios.bin vgabios.debug.bin 
@@ -33,12 +33,13 @@
           temp.awk.* vgabios.*.orig _vgabios_.*.c core *.bak .#*
 	cp VGABIOS-lgpl-latest.bin ../$(RELEASE).bin
 	cp VGABIOS-lgpl-latest.debug.bin ../$(RELEASE).debug.bin
-	cp VGABIOS-lgpl-latest.cirrus.bin ../$(RELEASE).cirrus.bin
-	cp VGABIOS-lgpl-latest.cirrus.debug.bin ../$(RELEASE).cirrus.debug.bin
+#	cp VGABIOS-lgpl-latest.cirrus.bin ../$(RELEASE).cirrus.bin
+#	cp VGABIOS-lgpl-latest.cirrus.debug.bin ../$(RELEASE).cirrus.debug.bin
 	tar czvf ../$(RELEASE).tgz --exclude CVS -C .. $(RELEASE)/
 
 vgabios.bin: vgabios.c vgabios.h vgafonts.h vgatables.h vbe.h vbe.c vbetables.h
-	$(GCC) -E vgabios.c $(VGABIOS_VERS) -DVBE $(VGABIOS_DATE) > _vgabios_.c
+	$(GCC) -E vgabios.c $(VGABIOS_VERS) -DVBE $(VGABIOS_DATE) > _vgabios_.c.tmp
+	grep -v -E "^# [0-9]" _vgabios_.c.tmp > _vgabios_.c
 	$(BCC) -o vgabios.s -C-c -D__i86__ -S -0 _vgabios_.c
 	sed -e 's/^\.text//' -e 's/^\.data//' vgabios.s > _vgabios_.s
 	$(AS86) _vgabios_.s -b vgabios.bin -u -w- -g -0 -j -O -l vgabios.txt
@@ -48,7 +49,8 @@
 	ls -l VGABIOS-lgpl-latest.bin
 
 vgabios.debug.bin: vgabios.c vgabios.h vgafonts.h vgatables.h vbe.h vbe.c vbetables.h
-	$(GCC) -E vgabios.c $(VGABIOS_VERS) -DVBE -DDEBUG $(VGABIOS_DATE) > _vgabios-debug_.c
+	$(GCC) -E vgabios.c $(VGABIOS_VERS) -DVBE -DDEBUG $(VGABIOS_DATE) > _vgabios-debug_.c.tmp
+	grep -v -E "^# [0-9]" _vgabios-debug_.c.tmp > _vgabios-debug_.c
 	$(BCC) -o vgabios-debug.s -C-c -D__i86__ -S -0 _vgabios-debug_.c
 	sed -e 's/^\.text//' -e 's/^\.data//' vgabios-debug.s > _vgabios-debug_.s
 	$(AS86) _vgabios-debug_.s -b vgabios.debug.bin -u -w- -g -0 -j -O -l vgabios.debug.txt
@@ -58,7 +60,8 @@
 	ls -l VGABIOS-lgpl-latest.debug.bin
 
 vgabios-cirrus.bin: vgabios.c vgabios.h vgafonts.h vgatables.h clext.c
-	$(GCC) -E vgabios.c $(VGABIOS_VERS) -DCIRRUS $(VGABIOS_DATE) > _vgabios-cirrus_.c
+	$(GCC) -E vgabios.c $(VGABIOS_VERS) -DCIRRUS $(VGABIOS_DATE) > _vgabios-cirrus_.c.tmp
+	grep -v -E "^# [0-9]" _vgabios-cirrus_.c.tmp > _vgabios-cirrus_.c
 	$(BCC) -o vgabios-cirrus.s -C-c -D__i86__ -S -0 _vgabios-cirrus_.c
 	sed -e 's/^\.text//' -e 's/^\.data//' vgabios-cirrus.s > _vgabios-cirrus_.s
 	$(AS86) _vgabios-cirrus_.s -b vgabios-cirrus.bin -u -w- -g -0 -j -O -l vgabios.cirrus.txt
@@ -68,7 +71,8 @@
 	ls -l VGABIOS-lgpl-latest.cirrus.bin
 
 vgabios-cirrus.debug.bin: vgabios.c vgabios.h vgafonts.h vgatables.h clext.c
-	$(GCC) -E vgabios.c $(VGABIOS_VERS) -DCIRRUS -DCIRRUS_DEBUG $(VGABIOS_DATE) > _vgabios-cirrus-debug_.c
+	$(GCC) -E vgabios.c $(VGABIOS_VERS) -DCIRRUS -DCIRRUS_DEBUG $(VGABIOS_DATE) > _vgabios-cirrus-debug_.c.tmp
+	grep -v -E "^# [0-9]" _vgabios-cirrus-debug_.c.tmp > _vgabios-cirrus-debug_.c
 	$(BCC) -o vgabios-cirrus-debug.s -C-c -D__i86__ -S -0 _vgabios-cirrus-debug_.c
 	sed -e 's/^\.text//' -e 's/^\.data//' vgabios-cirrus-debug.s > _vgabios-cirrus-debug_.s
 	$(AS86) _vgabios-cirrus-debug_.s -b vgabios.cirrus.debug.bin -u -w- -g -0 -j -O -l vgabios.cirrus.debug.txt
Common subdirectories: vgabios-0.5a/tests and emerald_bios_src/tests
diff -u vgabios-0.5a/vbe.c emerald_bios_src/vbe.c
--- vgabios-0.5a/vbe.c	2004-07-22 13:37:29.000000000 -0500
+++ emerald_bios_src/vbe.c	2005-08-31 16:00:04.987495000 -0500
@@ -30,16 +30,10 @@
 
 
 // defines available
-// enable LFB support
-#define VBE_HAVE_LFB
 
 // disable VESA/VBE2 check in vbe info
 //#define VBE2_NO_VESA_CHECK
 
-// dynamicly generate a mode_info list
-#define DYN_LIST
-
-
 #include "vbe.h"
 #include "vbetables.h"
 
@@ -52,70 +46,28 @@
 extern char vbebios_product_name;
 extern char vbebios_product_revision;
 
-#ifndef DYN_LIST
-extern Bit16u vbebios_mode_list;
-#endif
-
 ASM_START
 // FIXME: 'merge' these (c) etc strings with the vgabios.c strings?
 _vbebios_copyright:
-.ascii       "Bochs/Plex86 VBE(C) 2003 http://savannah.nongnu.org/projects/vgabios/"
+.ascii       "AMD SimNow Emerald (C) 2005"
 .byte        0x00
 
 _vbebios_vendor_name:
-.ascii       "Bochs/Plex86 Developers"
+.ascii       "AMD"
 .byte        0x00
 
 _vbebios_product_name:
-.ascii       "Bochs/Plex86 VBE Adapter"
+.ascii       "AMD SimNow Emerald VBE"
 .byte        0x00
 
 _vbebios_product_revision:
-.ascii       "$Id: vbe.c,v 1.45 2004/07/22 18:37:29 vruppert Exp $"
+.ascii       "VBE v0.1"
 .byte        0x00
 
-_vbebios_info_string:
-.ascii      "Bochs VBE Display Adapter enabled"
-.byte	0x0a,0x0d
-.byte	0x0a,0x0d
-.byte	0x00
-
-_no_vbebios_info_string:
-.ascii      "NO Bochs VBE Support available!"
-.byte	0x0a,0x0d
-.byte	0x0a,0x0d
-.byte 0x00
-
-msg_vbe_init:
-.ascii      "VBE Bios $Id: vbe.c,v 1.45 2004/07/22 18:37:29 vruppert Exp $"
-.byte	0x0a,0x0d, 0x00
-
-
-#ifndef DYN_LIST
-// FIXME: for each new mode add a statement here
-//        at least until dynamic list creation is working
-_vbebios_mode_list:
-
-.word VBE_VESA_MODE_640X400X8
-.word VBE_VESA_MODE_640X480X8
-.word VBE_VESA_MODE_800X600X4
-.word VBE_VESA_MODE_800X600X8
-.word VBE_VESA_MODE_1024X768X8
-.word VBE_VESA_MODE_640X480X1555
-.word VBE_VESA_MODE_640X480X565
-.word VBE_VESA_MODE_640X480X888
-.word VBE_VESA_MODE_800X600X1555
-.word VBE_VESA_MODE_800X600X565
-.word VBE_VESA_MODE_800X600X888
-.word VBE_VESA_MODE_1024X768X1555
-.word VBE_VESA_MODE_1024X768X565
-.word VBE_VESA_MODE_1024X768X888
-.word VBE_OWN_MODE_640X480X8888
-.word VBE_OWN_MODE_800X600X8888
-.word VBE_OWN_MODE_1024X768X8888
-.word VBE_OWN_MODE_320X200X8
-.word VBE_VESA_MODE_END_OF_LIST
-#endif
+_vbebios_msg:
+.ascii       "AMD SimNow Emerald VBE v0.1"
+.byte        0x0a,0x0d
+.byte        0x00
 
 ASM_END
 
@@ -133,321 +85,21 @@
   mov ax,#?1
   out dx,ax 
 MEND
-
-; DISPI ioport functions
-
-dispi_get_id:
-  push dx
-  mov  dx, # VBE_DISPI_IOPORT_INDEX
-  mov  ax, # VBE_DISPI_INDEX_ID
-  out  dx, ax
-  mov  dx, # VBE_DISPI_IOPORT_DATA
-  in   ax, dx
-  pop  dx
-  ret
-
-dispi_set_id:
-  push dx
-  push ax
-  mov  dx, # VBE_DISPI_IOPORT_INDEX
-  mov  ax, # VBE_DISPI_INDEX_ID
-  out  dx, ax
-  pop  ax
-  mov  dx, # VBE_DISPI_IOPORT_DATA
-  out  dx, ax
-  pop  dx
-  ret
-ASM_END
-
-static void dispi_set_xres(xres)
-  Bit16u xres;
-{
-ASM_START
-  push bp
-  mov  bp, sp
-  push ax
-  push dx
-
-  mov  dx, # VBE_DISPI_IOPORT_INDEX
-  mov  ax, # VBE_DISPI_INDEX_XRES
-  out  dx, ax
-  mov  dx, # VBE_DISPI_IOPORT_DATA
-  mov  ax, 4[bp] ; xres
-  out  dx, ax
-  push ax
-  mov  dx, #0x03d4
-  mov  ax, #0x0011
-  out  dx, ax
-  mov  dx, #0x03d4
-  pop  ax
-  push ax
-  shr  ax, #3
-  dec  ax
-  mov  ah, al
-  mov  al, #0x01
-  out  dx, ax
-  pop  ax
-  call vga_set_virt_width
-
-  pop  dx
-  pop  ax
-  pop  bp
-ASM_END
-}
-
-static void dispi_set_yres(yres)
-  Bit16u yres;
-{
-  outw(VBE_DISPI_IOPORT_INDEX,VBE_DISPI_INDEX_YRES);
-  outw(VBE_DISPI_IOPORT_DATA,yres);
-}
-
-static void dispi_set_bpp(bpp)
-  Bit16u bpp;
-{
-  outw(VBE_DISPI_IOPORT_INDEX,VBE_DISPI_INDEX_BPP);
-  outw(VBE_DISPI_IOPORT_DATA,bpp);
-}
-
-ASM_START
-; AL = bits per pixel / AH = bytes per pixel
-dispi_get_bpp:
-  push dx
-  mov  dx, # VBE_DISPI_IOPORT_INDEX
-  mov  ax, # VBE_DISPI_INDEX_BPP
-  out  dx, ax
-  mov  dx, # VBE_DISPI_IOPORT_DATA
-  in   ax, dx
-  mov  ah, al
-  shr  ah, 3
-  test al, #0x07
-  jz   get_bpp_noinc
-  inc  ah
-get_bpp_noinc:
-  pop  dx
-  ret
-
-_dispi_get_max_bpp:
-  push dx
-  push bx
-  call dispi_get_enable
-  mov  bx, ax
-  or   ax, # VBE_DISPI_GETCAPS
-  call _dispi_set_enable
-  mov  dx, # VBE_DISPI_IOPORT_INDEX
-  mov  ax, # VBE_DISPI_INDEX_BPP
-  out  dx, ax
-  mov  dx, # VBE_DISPI_IOPORT_DATA
-  in   ax, dx
-  push ax
-  mov  ax, bx
-  call _dispi_set_enable
-  pop  ax
-  pop  bx
-  pop  dx
-  ret
-
-_dispi_set_enable:
-  push dx
-  push ax
-  mov  dx, # VBE_DISPI_IOPORT_INDEX
-  mov  ax, # VBE_DISPI_INDEX_ENABLE
-  out  dx, ax
-  pop  ax
-  mov  dx, # VBE_DISPI_IOPORT_DATA
-  out  dx, ax
-  pop  dx
-  ret
-
-dispi_get_enable:
-  push dx
-  mov  dx, # VBE_DISPI_IOPORT_INDEX
-  mov  ax, # VBE_DISPI_INDEX_ENABLE
-  out  dx, ax
-  mov  dx, # VBE_DISPI_IOPORT_DATA
-  in   ax, dx
-  pop  dx
-  ret
-
-_dispi_set_bank:
-  push dx
-  push ax
-  mov  dx, # VBE_DISPI_IOPORT_INDEX
-  mov  ax, # VBE_DISPI_INDEX_BANK
-  out  dx, ax
-  pop  ax
-  mov  dx, # VBE_DISPI_IOPORT_DATA
-  out  dx, ax
-  pop  dx
-  ret
-
-dispi_get_bank:
-  push dx
-  mov  dx, # VBE_DISPI_IOPORT_INDEX
-  mov  ax, # VBE_DISPI_INDEX_BANK
-  out  dx, ax
-  mov  dx, # VBE_DISPI_IOPORT_DATA
-  in   ax, dx
-  pop  dx
-  ret
-ASM_END
-
-static void dispi_set_bank_farcall()
-{
-ASM_START
-  cmp bx,#0x0100
-  je dispi_set_bank_farcall_get
-  or bx,bx
-  jnz dispi_set_bank_farcall_error
-  push dx
-  mov ax,# VBE_DISPI_INDEX_BANK
-  mov dx,# VBE_DISPI_IOPORT_INDEX
-  out dx,ax
-  pop ax
-  mov dx,# VBE_DISPI_IOPORT_DATA
-  out dx,ax
-  retf
-dispi_set_bank_farcall_get:
-  mov ax,# VBE_DISPI_INDEX_BANK
-  mov dx,# VBE_DISPI_IOPORT_INDEX
-  out dx,ax
-  mov dx,# VBE_DISPI_IOPORT_DATA
-  in ax,dx
-  mov dx,ax
-  retf
-dispi_set_bank_farcall_error:
-  mov ax,#0x014F
-  retf
-ASM_END
-}
-
-ASM_START
-dispi_set_x_offset:
-  push dx
-  push ax
-  mov  dx, # VBE_DISPI_IOPORT_INDEX
-  mov  ax, # VBE_DISPI_INDEX_X_OFFSET
-  out  dx, ax
-  pop  ax
-  mov  dx, # VBE_DISPI_IOPORT_DATA
-  out  dx, ax
-  pop  dx
-  ret
-
-dispi_get_x_offset:
-  push dx
-  mov  dx, # VBE_DISPI_IOPORT_INDEX
-  mov  ax, # VBE_DISPI_INDEX_X_OFFSET
-  out  dx, ax
-  mov  dx, # VBE_DISPI_IOPORT_DATA
-  in   ax, dx
-  pop  dx
-  ret
-
-dispi_set_y_offset:
-  push dx
-  push ax
-  mov  dx, # VBE_DISPI_IOPORT_INDEX
-  mov  ax, # VBE_DISPI_INDEX_Y_OFFSET
-  out  dx, ax
-  pop  ax
-  mov  dx, # VBE_DISPI_IOPORT_DATA
-  out  dx, ax
-  pop  dx
-  ret
-
-dispi_get_y_offset:
-  push dx
-  mov  dx, # VBE_DISPI_IOPORT_INDEX
-  mov  ax, # VBE_DISPI_INDEX_Y_OFFSET
-  out  dx, ax
-  mov  dx, # VBE_DISPI_IOPORT_DATA
-  in   ax, dx
-  pop  dx
-  ret
-
-vga_set_virt_width:
-  push ax
-  push bx
-  push dx
-  mov  bx, ax
-  call dispi_get_bpp
-  cmp  al, #0x04
-  ja   set_width_svga
-  shr  bx, #2
-set_width_svga:
-  shr  bx, #2
-  mov  dx, #0x03d4
-  mov  ah, bl
-  mov  al, #0x13
-  out  dx, ax
-  pop  dx
-  pop  bx
-  pop  ax
-  ret
-
-dispi_set_virt_width:
-  call vga_set_virt_width
-  push dx
-  push ax
-  mov  dx, # VBE_DISPI_IOPORT_INDEX
-  mov  ax, # VBE_DISPI_INDEX_VIRT_WIDTH
-  out  dx, ax
-  pop  ax
-  mov  dx, # VBE_DISPI_IOPORT_DATA
-  out  dx, ax
-  pop  dx
-  ret
-
-dispi_get_virt_width:
-  push dx
-  mov  dx, # VBE_DISPI_IOPORT_INDEX
-  mov  ax, # VBE_DISPI_INDEX_VIRT_WIDTH
-  out  dx, ax
-  mov  dx, # VBE_DISPI_IOPORT_DATA
-  in   ax, dx
-  pop  dx
-  ret
-
-dispi_get_virt_height:
-  push dx
-  mov  dx, # VBE_DISPI_IOPORT_INDEX
-  mov  ax, # VBE_DISPI_INDEX_VIRT_HEIGHT
-  out  dx, ax
-  mov  dx, # VBE_DISPI_IOPORT_DATA
-  in   ax, dx
-  pop  dx
-  ret
 ASM_END
 
 
 // ModeInfo helper function
-static ModeInfoListItem* mode_info_find_mode(mode, using_lfb)
-  Bit16u mode; Boolean using_lfb;
+static ModeInfoListItem* mode_info_find_mode(mode)
+  Bit16u mode;
 {
   ModeInfoListItem  *cur_info=&mode_info_list;
 
   while (cur_info->mode != VBE_VESA_MODE_END_OF_LIST)
   {
     if (cur_info->mode == mode)
-    {
-      if (!using_lfb)
-      {
-        return cur_info;
-      }
-      else if (cur_info->info.ModeAttributes & VBE_MODE_ATTRIBUTE_LINEAR_FRAME_BUFFER_MODE)
-      {
-        return cur_info;
-      }
-      else
-      {
-        cur_info++;
-      }
-    }
+      return cur_info;
     else
-    {
       cur_info++;
-    }
   }
 
   return 0;
@@ -460,9 +112,9 @@
 _vbe_has_vbe_display:
   push ds
   push bx
-  mov  ax, # BIOSMEM_SEG
+  mov  ax, # 0xc000
   mov  ds, ax
-  mov  bx, # BIOSMEM_VBE_FLAG
+  mov  bx, # _adapter_vbe
   mov  al, [bx]
   and  al, #0x01
   xor  ah, ah
@@ -474,45 +126,44 @@
 ; This function does a sanity check on the host side display code interface.
 
 vbe_init:
-  mov  ax, # VBE_DISPI_ID0
-  call dispi_set_id
-  call dispi_get_id
-  cmp  ax, # VBE_DISPI_ID0
-  jne  no_vbe_interface
+  mov  ax, #0xc000
+  mov  ds, ax
+  mov  di, #_adapter_regaddrio
+  push [di]
+  call _ind
+  and  al, #0x4
+  jnz  vbe_init_succeeded
+
+  mov  cl, #0
+  jmp  vbe_init_final
+vbe_init_succeeded:
+  mov  cl, #1
+vbe_init_final:
+  inc  sp
+  inc  sp
   push ds
   push bx
-  mov  ax, # BIOSMEM_SEG
+  mov  ax, # 0xc000
   mov  ds, ax
-  mov  bx, # BIOSMEM_VBE_FLAG
-  mov  al, #0x01
-  mov  [bx], al
+  mov  bx, # _adapter_vbe
+  mov  [bx], cl
   pop  bx
   pop  ds
-  mov  ax, # VBE_DISPI_ID3
-  call dispi_set_id
-no_vbe_interface:
-  mov  bx, #msg_vbe_init
-  push bx
-  call _printf
-  inc  sp
-  inc  sp
   ret
 
 ; VBE Display Info - Display information on screen about the VBE
 
 vbe_display_info:
   call _vbe_has_vbe_display
-  test ax, ax
-  jz   no_vbe_flag
+  cmp  ax, #0
+  je   no_display_vbe
   mov  ax, #0xc000
   mov  ds, ax
-  mov  si, #_vbebios_info_string
-  jmp  _display_string
-no_vbe_flag:
-  mov  ax, #0xc000
-  mov  ds, ax
-  mov  si, #_no_vbebios_info_string
+  mov  si, #_vbebios_msg
   jmp  _display_string
+no_display_vbe:
+  ret
+
 ASM_END  
 
 /** Function 00h - Return VBE Controller Information
@@ -534,7 +185,6 @@
         Bit16u            status;
         Bit16u            result;
         Bit16u            vbe2_info;
-        Bit16u            cur_mode=0;
         Bit16u            cur_ptr=34;
         ModeInfoListItem  *cur_info=&mode_info_list;
         
@@ -587,18 +237,12 @@
         vbe_info_block.Capabilities[2] = 0;
         vbe_info_block.Capabilities[3] = 0;
 
-#ifdef DYN_LIST
         // VBE Video Mode Pointer (dynamicly generated from the mode_info_list)
         vbe_info_block.VideoModePtr_Seg= ES ;
         vbe_info_block.VideoModePtr_Off= DI + 34;
-#else
-        // VBE Video Mode Pointer (staticly in rom)
-        vbe_info_block.VideoModePtr_Seg = 0xc000;
-        vbe_info_block.VideoModePtr_Off = &vbebios_mode_list;
-#endif
 
-        // VBE Total Memory (in 64b blocks)
-        vbe_info_block.TotalMemory = VBE_TOTAL_VIDEO_MEMORY_DIV_64K;
+        // VBE Total Memory (in 64K blocks)
+        vbe_info_block.TotalMemory = adapter_bufsiz;
 
         if (vbe2_info)
 	{
@@ -619,24 +263,17 @@
                 // copy updates in vbe_info_block back (VBE 1.x compatibility)
                 memcpyb(ES, DI, ss, &vbe_info_block, 256);
 	}
-                
-#ifdef DYN_LIST
+
+	// Building VBE mode list
         do
         {
-                if (cur_info->info.BitsPerPixel <= dispi_get_max_bpp()) {
-#ifdef DEBUG
-                  printf("VBE found mode %x => %x\n", cur_info->mode,cur_mode);
-#endif
-                  write_word(ES, DI + cur_ptr, cur_info->mode);
-                  cur_mode++;
-                  cur_ptr+=2;
-                }
+                write_word(ES, DI + cur_ptr, cur_info->mode);
+                cur_ptr+=2;
                 cur_info++;
         } while (cur_info->mode != VBE_VESA_MODE_END_OF_LIST);
         
         // Add vesa mode list terminator
         write_word(ES, DI + cur_ptr, cur_info->mode);
-#endif
 
         result = 0x4f;
 
@@ -661,30 +298,30 @@
         Bit16u            ss=get_SS();
         ModeInfoBlock     info;
         ModeInfoListItem  *cur_info;
-        Boolean           using_lfb;
 
 #ifdef DEBUG
         printf("VBE vbe_biosfn_return_mode_information ES%x DI%x CX%x\n",ES,DI,CX);
 #endif
 
-        using_lfb=((CX & VBE_MODE_LINEAR_FRAME_BUFFER) == VBE_MODE_LINEAR_FRAME_BUFFER);
-        
-        CX = (CX & 0x1ff);
-        
-        cur_info = mode_info_find_mode(CX, using_lfb, &cur_info);
+        cur_info = mode_info_find_mode(CX & 0x3fff);
 
         if (cur_info != 0)
         {
+		int i;
 #ifdef DEBUG
                 printf("VBE found mode %x\n",CX);
-#endif        
+#endif
+		for (i = 0; i < 2; i++) {
+			if (cur_info->bitspp == mode_proto_list[i].bitspp)
+				break;
+		}
                 memsetb(ss, &info, 0, sizeof(ModeInfoBlock));
-                memcpyb(ss, &info, 0xc000, &(cur_info->info), sizeof(ModeInfoBlockCompact));
-                if (info.WinAAttributes & VBE_WINDOW_ATTRIBUTE_RELOCATABLE) {
-                  info.WinFuncPtr = 0xC0000000UL;
-                  *(Bit16u *)&(info.WinFuncPtr) = (Bit16u)(dispi_set_bank_farcall);
-                }
-                
+                memcpyb(ss, &info, 0xc000, &(mode_proto_list[i].info), sizeof(ModeInfoBlockCompact));
+		info.BytesPerScanLine = cur_info->xsiz * cur_info->bpp;
+		info.XResolution = cur_info->xsiz;
+		info.YResolution = cur_info->ysiz;
+		info.LinBytesPerScanLine = info.BytesPerScanLine;
+		info.PhysBasePtr = adapter_bufaddr;
                 result = 0x4f;
         }
         else
@@ -720,73 +357,78 @@
         Bit16u            ss = get_SS();
         Bit16u            result;
         ModeInfoListItem  *cur_info;
-        Boolean           using_lfb;
-        Bit8u             no_clear;
-        Bit8u             lfb_flag;
-
-        using_lfb=((BX & VBE_MODE_LINEAR_FRAME_BUFFER) == VBE_MODE_LINEAR_FRAME_BUFFER);
-        lfb_flag=using_lfb?VBE_DISPI_LFB_ENABLED:0;
-        no_clear=((BX & VBE_MODE_PRESERVE_DISPLAY_MEMORY) == VBE_MODE_PRESERVE_DISPLAY_MEMORY)?VBE_DISPI_NOCLEARMEM:0;
-
-        BX = (BX & 0x1ff);
 
-        //result=read_word(ss,AX);
-        
-        // check for non vesa mode
-        if (BX<VBE_MODE_VESA_DEFINED)
+        // TBD: check for non vesa mode
+	//  Not currently done quite right.
+        if ((BX & 0x7FFF)<VBE_MODE_VESA_DEFINED)
         {
                 Bit8u   mode;
-                
-                dispi_set_enable(VBE_DISPI_DISABLED);
+#ifdef DEBUG
+                printf("VBE setting standard mode %x\n", BX);
+#endif
                 // call the vgabios in order to set the video mode
-                // this allows for going back to textmode with a VBE call (some applications expect that to work)
+                // this allows for going back to textmode with a
+		// VBE call (some applications expect that to work)
                 
                 mode=(BX & 0xff);
                 biosfn_set_video_mode(mode);
                 result = 0x4f;
         }
         
-        cur_info = mode_info_find_mode(BX, using_lfb, &cur_info);
+        cur_info = mode_info_find_mode(BX & 0x3FFF);
 
-        if (cur_info != 0)
+	// Require mode to use a Linear Frame Buffer
+        if (cur_info != 0 && (BX & 0x4000))
         {
+		Bit8u videoctl;
 #ifdef DEBUG
-                printf("VBE found mode %x, setting:\n", BX);
-                printf("\txres%x yres%x bpp%x\n",
-                        cur_info->info.XResolution,
-                        cur_info->info.YResolution,
-                        cur_info->info.BitsPerPixel);
-#endif
-                
-                // first disable current mode (when switching between vesa modi)
-                dispi_set_enable(VBE_DISPI_DISABLED);
+                printf("VBE found and setting mode %x\n", BX);
+                printf("\txres %d yres %d bpp %d\n",
+                        cur_info->xsiz,
+                        cur_info->ysiz,
+                        cur_info->bitspp);
+#endif
+
+		// Set VBE mode!!
+		outd(adapter_regaddrio+12, 0, 0);
+		outd(adapter_regaddrio+12, cur_info->xsiz * cur_info->bpp, 0);
+		outd(adapter_regaddrio+12, cur_info->xsiz, 0);
+		outd(adapter_regaddrio+12, cur_info->ysiz, 0);
+		outd(adapter_regaddrio+12, cur_info->bpp, 0);
+		outd(adapter_regaddrio+8, 2, 0);
+		outd(adapter_regaddrio+4, 1, 0);
+
+		if (!(BX & VBE_MODE_PRESERVE_DISPLAY_MEMORY))
+		{
+			// No 32-bit multiplies, yuck!
+			//  Exploit current resolutions being divisible
+			//  by several powers of 2.
+			Bit32u siz = ((cur_info->xsiz * cur_info->bpp) >> 6)
+				* (cur_info->ysiz >> 2);
+			siz = siz << 8;
+			outd(adapter_regaddrio+12, 0, 0);
+			outd(adapter_regaddrio+12, siz);
+			outd(adapter_regaddrio+8, 3, 0);
+			videoctl = 0x60;
+		}
+		else
+		{
+			videoctl = 0xe0;
+		}
+
+		// Tell BIOS we're here!
+		write_byte(BIOSMEM_SEG, BIOSMEM_VIDEO_CTL, videoctl);
+		write_byte(BIOSMEM_SEG, BIOSMEM_CURRENT_MODE, (Bit8u)(BX & 0xFF));
 
-                if (cur_info->mode == VBE_VESA_MODE_800X600X4)
-                {
-                  biosfn_set_video_mode(0x6a);
-                }
-
-                dispi_set_bpp(cur_info->info.BitsPerPixel);
-                dispi_set_xres(cur_info->info.XResolution);
-                dispi_set_yres(cur_info->info.YResolution);
-                dispi_set_bank(0);
-                dispi_set_enable(VBE_DISPI_ENABLED | no_clear | lfb_flag);
-
-                write_word(BIOSMEM_SEG,BIOSMEM_VBE_MODE,BX);
-                write_byte(BIOSMEM_SEG,BIOSMEM_VIDEO_CTL,(0x60 | no_clear));
-
-                result = 0x4f;                  
+                result = 0x4f;
         }
         else
         {
-#ifdef DEBUG
-                printf("VBE *NOT* found mode %x\n" , BX);
-#endif        
                 result = 0x100;
                 
                 // FIXME: redirect non VBE modi to normal VGA bios operation
                 //        (switch back to VGA mode
-                if (BX == 3)
+                if ((BX & 0x7FFF) == 3)
                         result = 0x4f;
         }
 
@@ -807,17 +449,23 @@
   push ds
   mov  ax, # BIOSMEM_SEG
   mov  ds, ax
-  call dispi_get_enable
-  and  ax, # VBE_DISPI_ENABLED
-  jz   no_vbe_mode
-  mov  bx, # BIOSMEM_VBE_MODE
-  mov  ax, [bx]
+  mov  bx, # BIOSMEM_VIDEO_CTL
+  mov  al, [bx]
+  mov  bl, al
+  and  al, #0x80
+  and  bl, #0x7f
+  cmp  bl, #0x60
+  jne  no_vbe_mode
+  or   al, #0x41
+  shl  ax, #8
+  mov  bx, # BIOSMEM_CURRENT_MODE
+  mov  al, [bx]
   mov  bx, ax
   jnz  vbe_03_ok
 no_vbe_mode:
   mov  bx, # BIOSMEM_CURRENT_MODE
-  mov  al, [bx]
-  mov  bl, al
+  mov  bl, [bx]
+  or   bl, al
   xor  bh, bh
 vbe_03_ok:
   mov  ax, #0x004f
@@ -867,28 +515,8 @@
  */
 ASM_START
 vbe_biosfn_display_window_control:
-  cmp  bl, #0x00
-  jne  vbe_05_failed
-  cmp  bh, #0x01
-  je   get_display_window
-  jb   set_display_window
-  mov  ax, #0x0100
-  ret
-set_display_window:
-  mov  ax, dx
-  call _dispi_set_bank
-  call dispi_get_bank
-  cmp  ax, dx
-  jne  vbe_05_failed
-  mov  ax, #0x004f
-  ret
-get_display_window:
-  call dispi_get_bank
-  mov  dx, ax
-  mov  ax, #0x004f
-  ret
-vbe_05_failed:
-  mov  ax, #0x014f
+// Not supported, no "windowed" video modes!
+  mov  ax, #0x0300
   ret
 ASM_END
 
@@ -914,6 +542,7 @@
  */
 ASM_START
 vbe_biosfn_set_get_logical_scan_line_length:
+#if 0
   mov  ax, cx
   cmp  bl, #0x01
   je   get_logical_scan_line_length
@@ -943,6 +572,8 @@
   call dispi_get_virt_height
   mov  dx, ax
   mov  ax, #0x004f
+#endif
+  mov  ax, #0x0100
   ret
 ASM_END
 
@@ -985,6 +616,7 @@
  */
 ASM_START
 vbe_biosfn_set_get_display_start:
+#if 0
   cmp  bl, #0x80
   je   set_display_start
   cmp  bl, #0x01
@@ -1006,6 +638,8 @@
   mov  dx, ax
   xor  bh, bh
   mov  ax, #0x004f
+#endif
+  mov  ax, #0x0100
   ret
 ASM_END
   
@@ -1023,6 +657,7 @@
  */
 ASM_START
 vbe_biosfn_set_get_dac_palette_format:
+#if 0
   cmp  bl, #0x01
   je   get_dac_palette_format
   jb   set_dac_palette_format
@@ -1051,6 +686,8 @@
   ret
 vbe_08_unsupported:
   mov  ax, #0x014f
+#endif
+  mov  ax, #0x0100
   ret
 ASM_END
 
@@ -1068,15 +705,3 @@
 {
 }
 
-/** Function 0Ah - Return VBE Protected Mode Interface
- * 
- * Input:
- *              AX      = 4F0Ah
- * Output:
- *              AX      = VBE Return Status
- *
- * FIXME: incomplete API description, Input & Output
- */
-void vbe_biosfn_return_protected_mode_interface(AX)
-{
-}
diff -u vgabios-0.5a/vbe.h emerald_bios_src/vbe.h
--- vgabios-0.5a/vbe.h	2004-05-09 15:31:41.000000000 -0500
+++ emerald_bios_src/vbe.h	2005-08-31 16:00:04.999474000 -0500
@@ -194,14 +194,24 @@
 #define VBE_VESA_MODE_1280X1024X565                      0x11A
 #define VBE_VESA_MODE_1280X1024X888                      0x11B
 
-// BOCHS/PLEX86 'own' mode numbers
+// AMD SimNow Emerald VBE mode numbers
 #define VBE_OWN_MODE_320X200X8888                        0x140
-#define VBE_OWN_MODE_640X400X8888                        0x141
-#define VBE_OWN_MODE_640X480X8888                        0x142
-#define VBE_OWN_MODE_800X600X8888                        0x143
-#define VBE_OWN_MODE_1024X768X8888                       0x144
-#define VBE_OWN_MODE_1280X1024X8888                      0x145
-#define VBE_OWN_MODE_320X200X8                           0x146
+#define VBE_OWN_MODE_640X480X8888                        0x141
+#define VBE_OWN_MODE_800X600X8888                        0x142
+#define VBE_OWN_MODE_1024X768X8888                       0x143
+#define VBE_OWN_MODE_1280X720X565                        0x144
+#define VBE_OWN_MODE_1280X720X8888                       0x145
+#define VBE_OWN_MODE_1280X960X565                        0x146
+#define VBE_OWN_MODE_1280X960X8888                       0x147
+#define VBE_OWN_MODE_1280X1024X8888                      0x148
+#define VBE_OWN_MODE_1600X1200X565                       0x149
+#define VBE_OWN_MODE_1600X1200X8888                      0x14A
+#define VBE_OWN_MODE_1920X1080X565                       0x14B
+#define VBE_OWN_MODE_1920X1080X8888                      0x14C
+#define VBE_OWN_MODE_1920X1200X565                       0x14D
+#define VBE_OWN_MODE_1920X1200X8888                      0x14E
+#define VBE_OWN_MODE_2048X1536X565                       0x14F
+#define VBE_OWN_MODE_2048X1536X8888                      0x150
 
 #define VBE_VESA_MODE_END_OF_LIST                        0xFFFF
 
@@ -253,50 +263,4 @@
 #define VBE_DIRECTCOLOR_COLOR_RAMP_PROGRAMMABLE          0x01
 #define VBE_DIRECTCOLOR_RESERVED_BITS_AVAILABLE          0x02
 
-// GUEST <-> HOST Communication API
-
-// FIXME: either dynamicly ask host for this or put somewhere high in physical memory
-//        like 0xE0000000
-
-
-  #define VBE_DISPI_TOTAL_VIDEO_MEMORY_MB 4
-
-  #define VBE_DISPI_BANK_ADDRESS          0xA0000
-  #define VBE_DISPI_BANK_SIZE_KB          64
-  
-  #define VBE_DISPI_MAX_XRES              1024
-  #define VBE_DISPI_MAX_YRES              768
-  
-  #define VBE_DISPI_IOPORT_INDEX          0x01CE
-  #define VBE_DISPI_IOPORT_DATA           0x01CF
-  
-  #define VBE_DISPI_INDEX_ID              0x0
-  #define VBE_DISPI_INDEX_XRES            0x1
-  #define VBE_DISPI_INDEX_YRES            0x2
-  #define VBE_DISPI_INDEX_BPP             0x3
-  #define VBE_DISPI_INDEX_ENABLE          0x4
-  #define VBE_DISPI_INDEX_BANK            0x5
-  #define VBE_DISPI_INDEX_VIRT_WIDTH      0x6
-  #define VBE_DISPI_INDEX_VIRT_HEIGHT     0x7
-  #define VBE_DISPI_INDEX_X_OFFSET        0x8
-  #define VBE_DISPI_INDEX_Y_OFFSET        0x9
-      
-  #define VBE_DISPI_ID0                   0xB0C0
-  #define VBE_DISPI_ID1                   0xB0C1
-  #define VBE_DISPI_ID2                   0xB0C2
-  #define VBE_DISPI_ID3                   0xB0C3
-  
-  #define VBE_DISPI_DISABLED              0x00
-  #define VBE_DISPI_ENABLED               0x01
-  #define VBE_DISPI_GETCAPS               0x02
-  #define VBE_DISPI_8BIT_DAC              0x20
-  #define VBE_DISPI_LFB_ENABLED           0x40
-  #define VBE_DISPI_NOCLEARMEM            0x80
-  
-  #define VBE_DISPI_LFB_PHYSICAL_ADDRESS  0xE0000000
-
-
-#define VBE_TOTAL_VIDEO_MEMORY_DIV_64K                  (VBE_DISPI_TOTAL_VIDEO_MEMORY_MB*1024/64)
-
-
 #endif
diff -u vgabios-0.5a/vbetables.h emerald_bios_src/vbetables.h
--- vgabios-0.5a/vbetables.h	2004-07-22 13:31:30.000000000 -0500
+++ emerald_bios_src/vbetables.h	2005-08-31 16:00:05.096476000 -0500
@@ -3,1014 +3,93 @@
 
 /* vbetables.h
 
-   This file contains a static mode information list containing all
-   bochs/plex86 "supported" VBE modi and their 'settings'.
+   AMD SimNow Emerald VBE modes
 
 */
 
-typedef struct ModeInfoListItem
-{
-        Bit16u                  mode;
-        ModeInfoBlockCompact    info;
-} ModeInfoListItem;
-
-// FIXME: check all member variables to be correct for the different modi
-// FIXME: add more modi
-static ModeInfoListItem mode_info_list[]=
-{
-        {
-                VBE_VESA_MODE_640X400X8,
-                {
-/*typedef struct ModeInfoBlock
-{*/
-// Mandatory information for all VBE revisions
-   /*Bit16u ModeAttributes*/            VBE_MODE_ATTRIBUTE_SUPPORTED |
-                                        VBE_MODE_ATTRIBUTE_EXTENDED_INFORMATION_AVAILABLE |
-                                        VBE_MODE_ATTRIBUTE_COLOR_MODE |
-#ifdef VBE_HAVE_LFB
-                                        VBE_MODE_ATTRIBUTE_LINEAR_FRAME_BUFFER_MODE |
-#endif
-                                        VBE_MODE_ATTRIBUTE_GRAPHICS_MODE,
-   /*Bit8u  WinAAttributes*/            VBE_WINDOW_ATTRIBUTE_RELOCATABLE |
-                                        VBE_WINDOW_ATTRIBUTE_READABLE |
-                                        VBE_WINDOW_ATTRIBUTE_WRITEABLE,
-   /*Bit8u  WinBAttributes*/            0,
-   /*Bit16u WinGranularity*/            VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinSize*/                   VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinASegment*/               VGAMEM_GRAPH,
-   /*Bit16u WinBSegment*/               0,
-   /*Bit32u WinFuncPtr*/                0,
-   /*Bit16u BytesPerScanLine*/          640,
-// Mandatory information for VBE 1.2 and above
-   /*Bit16u XResolution*/               640,
-   /*Bit16u YResolution*/               400,
-   /*Bit8u  XCharSize*/                 8,
-   /*Bit8u  YCharSize*/                 16,
-   /*Bit8u  NumberOfPlanes*/            1,
-   /*Bit8u  BitsPerPixel*/              8,
-   /*Bit8u  NumberOfBanks*/             4, // 640x400/64kb == 4
-   /*Bit8u  MemoryModel*/               VBE_MEMORYMODEL_PACKED_PIXEL,
-   /*Bit8u  BankSize*/                  0,
-   /*Bit8u  NumberOfImagePages*/        15,
-   /*Bit8u  Reserved_page*/             0,
-// Direct Color fields (required for direct/6 and YUV/7 memory models)
-   /*Bit8u  RedMaskSize*/               0,
-   /*Bit8u  RedFieldPosition*/          0,
-   /*Bit8u  GreenMaskSize*/             0,
-   /*Bit8u  GreenFieldPosition*/        0,
-   /*Bit8u  BlueMaskSize*/              0,
-   /*Bit8u  BlueFieldPosition*/         0,
-   /*Bit8u  RsvdMaskSize*/              0,
-   /*Bit8u  RsvdFieldPosition*/         0,
-   /*Bit8u  DirectColorModeInfo*/       0,
-// Mandatory information for VBE 2.0 and above
-#ifdef VBE_HAVE_LFB
-   /*Bit32u PhysBasePtr*/               VBE_DISPI_LFB_PHYSICAL_ADDRESS,
-#else
-   /*Bit32u PhysBasePtr*/               0,
-#endif
-   /*Bit32u OffScreenMemOffset*/        0,
-   /*Bit16u OffScreenMemSize*/          0,
-// Mandatory information for VBE 3.0 and above
-   /*Bit16u LinBytesPerScanLine*/       640,
-   /*Bit8u  BnkNumberOfPages*/          0,
-   /*Bit8u  LinNumberOfPages*/          0,
-   /*Bit8u  LinRedMaskSize*/            0,
-   /*Bit8u  LinRedFieldPosition*/       0,
-   /*Bit8u  LinGreenMaskSize*/          0,
-   /*Bit8u  LinGreenFieldPosition*/     0,
-   /*Bit8u  LinBlueMaskSize*/           0,
-   /*Bit8u  LinBlueFieldPosition*/      0,
-   /*Bit8u  LinRsvdMaskSize*/           0,
-   /*Bit8u  LinRsvdFieldPosition*/      0,
-   /*Bit32u MaxPixelClock*/             0,
-/*} ModeInfoBlock;*/
-                }
-        },
-
-        {
-                VBE_VESA_MODE_640X480X8,
-                {
-/*typedef struct ModeInfoBlock
-{*/
-// Mandatory information for all VBE revisions
-   /*Bit16u ModeAttributes*/            VBE_MODE_ATTRIBUTE_SUPPORTED |
-                                        VBE_MODE_ATTRIBUTE_EXTENDED_INFORMATION_AVAILABLE |
-                                        VBE_MODE_ATTRIBUTE_COLOR_MODE |
-#ifdef VBE_HAVE_LFB
-                                        VBE_MODE_ATTRIBUTE_LINEAR_FRAME_BUFFER_MODE |
-#endif
-                                        VBE_MODE_ATTRIBUTE_GRAPHICS_MODE,
-   /*Bit8u  WinAAttributes*/            VBE_WINDOW_ATTRIBUTE_READABLE |
-                                        VBE_WINDOW_ATTRIBUTE_WRITEABLE,
-   /*Bit8u  WinBAttributes*/            0,
-   /*Bit16u WinGranularity*/            VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinSize*/                   VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinASegment*/               VGAMEM_GRAPH,
-   /*Bit16u WinBSegment*/               0,
-   /*Bit32u WinFuncPtr*/                0,
-   /*Bit16u BytesPerScanLine*/          640,
-// Mandatory information for VBE 1.2 and above
-   /*Bit16u XResolution*/               640,
-   /*Bit16u YResolution*/               480,
-   /*Bit8u  XCharSize*/                 8,
-   /*Bit8u  YCharSize*/                 16,
-   /*Bit8u  NumberOfPlanes*/            1,
-   /*Bit8u  BitsPerPixel*/              8,
-   /*Bit8u  NumberOfBanks*/             5, // 640x480/64kb == 5
-   /*Bit8u  MemoryModel*/               VBE_MEMORYMODEL_PACKED_PIXEL,
-   /*Bit8u  BankSize*/                  0,
-   /*Bit8u  NumberOfImagePages*/        11,
-   /*Bit8u  Reserved_page*/             0,
-// Direct Color fields (required for direct/6 and YUV/7 memory models)
-   /*Bit8u  RedMaskSize*/               0,
-   /*Bit8u  RedFieldPosition*/          0,
-   /*Bit8u  GreenMaskSize*/             0,
-   /*Bit8u  GreenFieldPosition*/        0,
-   /*Bit8u  BlueMaskSize*/              0,
-   /*Bit8u  BlueFieldPosition*/         0,
-   /*Bit8u  RsvdMaskSize*/              0,
-   /*Bit8u  RsvdFieldPosition*/         0,
-   /*Bit8u  DirectColorModeInfo*/       0,
-// Mandatory information for VBE 2.0 and above
-#ifdef VBE_HAVE_LFB
-   /*Bit32u PhysBasePtr*/               VBE_DISPI_LFB_PHYSICAL_ADDRESS,
-#else
-   /*Bit32u PhysBasePtr*/               0,
-#endif
-   /*Bit32u OffScreenMemOffset*/        0,
-   /*Bit16u OffScreenMemSize*/          0,
-// Mandatory information for VBE 3.0 and above
-   /*Bit16u LinBytesPerScanLine*/       640,
-   /*Bit8u  BnkNumberOfPages*/          0,
-   /*Bit8u  LinNumberOfPages*/          0,
-   /*Bit8u  LinRedMaskSize*/            0,
-   /*Bit8u  LinRedFieldPosition*/       0,
-   /*Bit8u  LinGreenMaskSize*/          0,
-   /*Bit8u  LinGreenFieldPosition*/     0,
-   /*Bit8u  LinBlueMaskSize*/           0,
-   /*Bit8u  LinBlueFieldPosition*/      0,
-   /*Bit8u  LinRsvdMaskSize*/           0,
-   /*Bit8u  LinRsvdFieldPosition*/      0,
-   /*Bit32u MaxPixelClock*/             0,
-/*} ModeInfoBlock;*/
-                }
-        },
-
-        {
-                VBE_VESA_MODE_800X600X4,
-                {
-/*typedef struct ModeInfoBlock
-{*/
-// Mandatory information for all VBE revisions
-   /*Bit16u ModeAttributes*/            VBE_MODE_ATTRIBUTE_SUPPORTED |
-                                        VBE_MODE_ATTRIBUTE_EXTENDED_INFORMATION_AVAILABLE |
-                                        VBE_MODE_ATTRIBUTE_TTY_BIOS_SUPPORT |
-                                        VBE_MODE_ATTRIBUTE_COLOR_MODE |
-                                        VBE_MODE_ATTRIBUTE_GRAPHICS_MODE,
-   /*Bit8u  WinAAttributes*/            VBE_WINDOW_ATTRIBUTE_RELOCATABLE |
-                                        VBE_WINDOW_ATTRIBUTE_READABLE |
-                                        VBE_WINDOW_ATTRIBUTE_WRITEABLE,
-   /*Bit8u  WinBAttributes*/            0,
-   /*Bit16u WinGranularity*/            VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinSize*/                   VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinASegment*/               VGAMEM_GRAPH,
-   /*Bit16u WinBSegment*/               0,
-   /*Bit32u WinFuncPtr*/                0,
-   /*Bit16u BytesPerScanLine*/          100,
-// Mandatory information for VBE 1.2 and above
-   /*Bit16u XResolution*/               800,
-   /*Bit16u YResolution*/               600,
-   /*Bit8u  XCharSize*/                 8,
-   /*Bit8u  YCharSize*/                 16,
-   /*Bit8u  NumberOfPlanes*/            4,
-   /*Bit8u  BitsPerPixel*/              4,
-   /*Bit8u  NumberOfBanks*/             16,
-   /*Bit8u  MemoryModel*/               VBE_MEMORYMODEL_PLANAR,
-   /*Bit8u  BankSize*/                  0,
-   /*Bit8u  NumberOfImagePages*/        15,
-   /*Bit8u  Reserved_page*/             0,
-// Direct Color fields (required for direct/6 and YUV/7 memory models)
-   /*Bit8u  RedMaskSize*/               0,
-   /*Bit8u  RedFieldPosition*/          0,
-   /*Bit8u  GreenMaskSize*/             0,
-   /*Bit8u  GreenFieldPosition*/        0,
-   /*Bit8u  BlueMaskSize*/              0,
-   /*Bit8u  BlueFieldPosition*/         0,
-   /*Bit8u  RsvdMaskSize*/              0,
-   /*Bit8u  RsvdFieldPosition*/         0,
-   /*Bit8u  DirectColorModeInfo*/       0,
-// Mandatory information for VBE 2.0 and above
-   /*Bit32u PhysBasePtr*/               0,
-   /*Bit32u OffScreenMemOffset*/        0,
-   /*Bit16u OffScreenMemSize*/          0,
-// Mandatory information for VBE 3.0 and above
-   /*Bit16u LinBytesPerScanLine*/       100,
-   /*Bit8u  BnkNumberOfPages*/          0,
-   /*Bit8u  LinNumberOfPages*/          0,
-   /*Bit8u  LinRedMaskSize*/            0,
-   /*Bit8u  LinRedFieldPosition*/       0,
-   /*Bit8u  LinGreenMaskSize*/          0,
-   /*Bit8u  LinGreenFieldPosition*/     0,
-   /*Bit8u  LinBlueMaskSize*/           0,
-   /*Bit8u  LinBlueFieldPosition*/      0,
-   /*Bit8u  LinRsvdMaskSize*/           0,
-   /*Bit8u  LinRsvdFieldPosition*/      0,
-   /*Bit32u MaxPixelClock*/             0,
-/*} ModeInfoBlock;*/
-                }
-        },
-
-        {
-                VBE_VESA_MODE_800X600X8,
-                {
-/*typedef struct ModeInfoBlock
-{*/
-// Mandatory information for all VBE revisions
-   /*Bit16u ModeAttributes*/            VBE_MODE_ATTRIBUTE_SUPPORTED |
-                                        VBE_MODE_ATTRIBUTE_EXTENDED_INFORMATION_AVAILABLE |
-                                        VBE_MODE_ATTRIBUTE_COLOR_MODE |
-#ifdef VBE_HAVE_LFB
-                                        VBE_MODE_ATTRIBUTE_LINEAR_FRAME_BUFFER_MODE |
-#endif
-                                        VBE_MODE_ATTRIBUTE_GRAPHICS_MODE,
-   /*Bit8u  WinAAttributes*/            VBE_WINDOW_ATTRIBUTE_RELOCATABLE |
-                                        VBE_WINDOW_ATTRIBUTE_READABLE |
-                                        VBE_WINDOW_ATTRIBUTE_WRITEABLE,
-   /*Bit8u  WinBAttributes*/            0,
-   /*Bit16u WinGranularity*/            VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinSize*/                   VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinASegment*/               VGAMEM_GRAPH,
-   /*Bit16u WinBSegment*/               0,
-   /*Bit32u WinFuncPtr*/                0,
-   /*Bit16u BytesPerScanLine*/          800,
-// Mandatory information for VBE 1.2 and above
-   /*Bit16u XResolution*/               800,
-   /*Bit16u YResolution*/               600,
-   /*Bit8u  XCharSize*/                 8,
-   /*Bit8u  YCharSize*/                 16,
-   /*Bit8u  NumberOfPlanes*/            1,
-   /*Bit8u  BitsPerPixel*/              8,
-   /*Bit8u  NumberOfBanks*/             8, // 800x600/64kb == 8
-   /*Bit8u  MemoryModel*/               VBE_MEMORYMODEL_PACKED_PIXEL,
-   /*Bit8u  BankSize*/                  0,
-   /*Bit8u  NumberOfImagePages*/        7,
-   /*Bit8u  Reserved_page*/             0,
-// Direct Color fields (required for direct/6 and YUV/7 memory models)
-   /*Bit8u  RedMaskSize*/               0,
-   /*Bit8u  RedFieldPosition*/          0,
-   /*Bit8u  GreenMaskSize*/             0,
-   /*Bit8u  GreenFieldPosition*/        0,
-   /*Bit8u  BlueMaskSize*/              0,
-   /*Bit8u  BlueFieldPosition*/         0,
-   /*Bit8u  RsvdMaskSize*/              0,
-   /*Bit8u  RsvdFieldPosition*/         0,
-   /*Bit8u  DirectColorModeInfo*/       0,
-// Mandatory information for VBE 2.0 and above
-#ifdef VBE_HAVE_LFB
-   /*Bit32u PhysBasePtr*/               VBE_DISPI_LFB_PHYSICAL_ADDRESS,
-#else
-   /*Bit32u PhysBasePtr*/               0,
-#endif
-   /*Bit32u OffScreenMemOffset*/        0,
-   /*Bit16u OffScreenMemSize*/          0,
-// Mandatory information for VBE 3.0 and above
-   /*Bit16u LinBytesPerScanLine*/       800,
-   /*Bit8u  BnkNumberOfPages*/          0,
-   /*Bit8u  LinNumberOfPages*/          0,
-   /*Bit8u  LinRedMaskSize*/            0,
-   /*Bit8u  LinRedFieldPosition*/       0,
-   /*Bit8u  LinGreenMaskSize*/          0,
-   /*Bit8u  LinGreenFieldPosition*/     0,
-   /*Bit8u  LinBlueMaskSize*/           0,
-   /*Bit8u  LinBlueFieldPosition*/      0,
-   /*Bit8u  LinRsvdMaskSize*/           0,
-   /*Bit8u  LinRsvdFieldPosition*/      0,
-   /*Bit32u MaxPixelClock*/             0,
-/*} ModeInfoBlock;*/
-                }
-        },
-
-        {
-                VBE_VESA_MODE_1024X768X8,
-                {
-/*typedef struct ModeInfoBlock
-{*/
-// Mandatory information for all VBE revisions
-   /*Bit16u ModeAttributes*/            VBE_MODE_ATTRIBUTE_SUPPORTED |
-                                        VBE_MODE_ATTRIBUTE_EXTENDED_INFORMATION_AVAILABLE |
-                                        VBE_MODE_ATTRIBUTE_COLOR_MODE |
-#ifdef VBE_HAVE_LFB
-                                        VBE_MODE_ATTRIBUTE_LINEAR_FRAME_BUFFER_MODE |
-#endif
-                                        VBE_MODE_ATTRIBUTE_GRAPHICS_MODE,
-   /*Bit8u  WinAAttributes*/            VBE_WINDOW_ATTRIBUTE_RELOCATABLE |
-                                        VBE_WINDOW_ATTRIBUTE_READABLE |
-                                        VBE_WINDOW_ATTRIBUTE_WRITEABLE,
-   /*Bit8u  WinBAttributes*/            0,
-   /*Bit16u WinGranularity*/            VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinSize*/                   VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinASegment*/               VGAMEM_GRAPH,
-   /*Bit16u WinBSegment*/               0,
-   /*Bit32u WinFuncPtr*/                0,
-   /*Bit16u BytesPerScanLine*/          1024,
-// Mandatory information for VBE 1.2 and above
-   /*Bit16u XResolution*/               1024,
-   /*Bit16u YResolution*/               768,
-   /*Bit8u  XCharSize*/                 8,
-   /*Bit8u  YCharSize*/                 16,
-   /*Bit8u  NumberOfPlanes*/            1,
-   /*Bit8u  BitsPerPixel*/              8,
-   /*Bit8u  NumberOfBanks*/             12, // 1024x768/64kb == 12
-   /*Bit8u  MemoryModel*/               VBE_MEMORYMODEL_PACKED_PIXEL,
-   /*Bit8u  BankSize*/                  0,
-   /*Bit8u  NumberOfImagePages*/        3,
-   /*Bit8u  Reserved_page*/             0,
-// Direct Color fields (required for direct/6 and YUV/7 memory models)
-   /*Bit8u  RedMaskSize*/               0,
-   /*Bit8u  RedFieldPosition*/          0,
-   /*Bit8u  GreenMaskSize*/             0,
-   /*Bit8u  GreenFieldPosition*/        0,
-   /*Bit8u  BlueMaskSize*/              0,
-   /*Bit8u  BlueFieldPosition*/         0,
-   /*Bit8u  RsvdMaskSize*/              0,
-   /*Bit8u  RsvdFieldPosition*/         0,
-   /*Bit8u  DirectColorModeInfo*/       0,
-// Mandatory information for VBE 2.0 and above
-#ifdef VBE_HAVE_LFB
-   /*Bit32u PhysBasePtr*/               VBE_DISPI_LFB_PHYSICAL_ADDRESS,
-#else
-   /*Bit32u PhysBasePtr*/               0,
-#endif
-   /*Bit32u OffScreenMemOffset*/        0,
-   /*Bit16u OffScreenMemSize*/          0,
-// Mandatory information for VBE 3.0 and above
-   /*Bit16u LinBytesPerScanLine*/       1024,
-   /*Bit8u  BnkNumberOfPages*/          0,
-   /*Bit8u  LinNumberOfPages*/          0,
-   /*Bit8u  LinRedMaskSize*/            0,
-   /*Bit8u  LinRedFieldPosition*/       0,
-   /*Bit8u  LinGreenMaskSize*/          0,
-   /*Bit8u  LinGreenFieldPosition*/     0,
-   /*Bit8u  LinBlueMaskSize*/           0,
-   /*Bit8u  LinBlueFieldPosition*/      0,
-   /*Bit8u  LinRsvdMaskSize*/           0,
-   /*Bit8u  LinRsvdFieldPosition*/      0,
-   /*Bit32u MaxPixelClock*/             0,
-/*} ModeInfoBlock;*/
-                }
-        },
-
-        {
-                VBE_VESA_MODE_640X480X1555,
-                {
-/*typedef struct ModeInfoBlock
-{*/
-// Mandatory information for all VBE revisions
-   /*Bit16u ModeAttributes*/            VBE_MODE_ATTRIBUTE_SUPPORTED |
-                                        VBE_MODE_ATTRIBUTE_EXTENDED_INFORMATION_AVAILABLE |
-                                        VBE_MODE_ATTRIBUTE_COLOR_MODE |
-#ifdef VBE_HAVE_LFB
-                                        VBE_MODE_ATTRIBUTE_LINEAR_FRAME_BUFFER_MODE |
-#endif
-                                        VBE_MODE_ATTRIBUTE_GRAPHICS_MODE,
-   /*Bit8u  WinAAttributes*/            VBE_WINDOW_ATTRIBUTE_RELOCATABLE |
-                                        VBE_WINDOW_ATTRIBUTE_READABLE |
-                                        VBE_WINDOW_ATTRIBUTE_WRITEABLE,
-   /*Bit8u  WinBAttributes*/            0,
-   /*Bit16u WinGranularity*/            VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinSize*/                   VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinASegment*/               VGAMEM_GRAPH,
-   /*Bit16u WinBSegment*/               0,
-   /*Bit32u WinFuncPtr*/                0,
-   /*Bit16u BytesPerScanLine*/          640*2,
-// Mandatory information for VBE 1.2 and above
-   /*Bit16u XResolution*/               640,
-   /*Bit16u YResolution*/               480,
-   /*Bit8u  XCharSize*/                 8,
-   /*Bit8u  YCharSize*/                 16,
-   /*Bit8u  NumberOfPlanes*/            1,
-   /*Bit8u  BitsPerPixel*/              15,
-   /*Bit8u  NumberOfBanks*/             1,
-   /*Bit8u  MemoryModel*/               VBE_MEMORYMODEL_DIRECT_COLOR,
-   /*Bit8u  BankSize*/                  0,
-   /*Bit8u  NumberOfImagePages*/        5,
-   /*Bit8u  Reserved_page*/             0,
-// Direct Color fields (required for direct/6 and YUV/7 memory models)
-   /*Bit8u  RedMaskSize*/               5,
-   /*Bit8u  RedFieldPosition*/          10,
-   /*Bit8u  GreenMaskSize*/             5,
-   /*Bit8u  GreenFieldPosition*/        5,
-   /*Bit8u  BlueMaskSize*/              5,
-   /*Bit8u  BlueFieldPosition*/         0,
-   /*Bit8u  RsvdMaskSize*/              1,
-   /*Bit8u  RsvdFieldPosition*/         15,
-   /*Bit8u  DirectColorModeInfo*/       0,
-// Mandatory information for VBE 2.0 and above
-#ifdef VBE_HAVE_LFB
-   /*Bit32u PhysBasePtr*/               VBE_DISPI_LFB_PHYSICAL_ADDRESS,
-#else
-   /*Bit32u PhysBasePtr*/               0,
-#endif
-   /*Bit32u OffScreenMemOffset*/        0,
-   /*Bit16u OffScreenMemSize*/          0,
-// Mandatory information for VBE 3.0 and above
-   /*Bit16u LinBytesPerScanLine*/       640*2,
-   /*Bit8u  BnkNumberOfPages*/          0,
-   /*Bit8u  LinNumberOfPages*/          0,
-   /*Bit8u  LinRedMaskSize*/            5,
-   /*Bit8u  LinRedFieldPosition*/       10,
-   /*Bit8u  LinGreenMaskSize*/          0,
-   /*Bit8u  LinGreenFieldPosition*/     5,
-   /*Bit8u  LinBlueMaskSize*/           5,
-   /*Bit8u  LinBlueFieldPosition*/      0,
-   /*Bit8u  LinRsvdMaskSize*/           1,
-   /*Bit8u  LinRsvdFieldPosition*/      15,
-   /*Bit32u MaxPixelClock*/             0,
-/*} ModeInfoBlock;*/
-                }
-        },
-
-        {
-                VBE_VESA_MODE_800X600X1555,
-                {
-/*typedef struct ModeInfoBlock
-{*/
-// Mandatory information for all VBE revisions
-   /*Bit16u ModeAttributes*/            VBE_MODE_ATTRIBUTE_SUPPORTED |
-                                        VBE_MODE_ATTRIBUTE_EXTENDED_INFORMATION_AVAILABLE |
-                                        VBE_MODE_ATTRIBUTE_COLOR_MODE |
-#ifdef VBE_HAVE_LFB
-                                        VBE_MODE_ATTRIBUTE_LINEAR_FRAME_BUFFER_MODE |
-#endif
-                                        VBE_MODE_ATTRIBUTE_GRAPHICS_MODE,
-   /*Bit8u  WinAAttributes*/            VBE_WINDOW_ATTRIBUTE_RELOCATABLE |
-                                        VBE_WINDOW_ATTRIBUTE_READABLE |
-                                        VBE_WINDOW_ATTRIBUTE_WRITEABLE,
-   /*Bit8u  WinBAttributes*/            0,
-   /*Bit16u WinGranularity*/            VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinSize*/                   VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinASegment*/               VGAMEM_GRAPH,
-   /*Bit16u WinBSegment*/               0,
-   /*Bit32u WinFuncPtr*/                0,
-   /*Bit16u BytesPerScanLine*/          800*2,
-// Mandatory information for VBE 1.2 and above
-   /*Bit16u XResolution*/               800,
-   /*Bit16u YResolution*/               600,
-   /*Bit8u  XCharSize*/                 8,
-   /*Bit8u  YCharSize*/                 16,
-   /*Bit8u  NumberOfPlanes*/            1,
-   /*Bit8u  BitsPerPixel*/              15,
-   /*Bit8u  NumberOfBanks*/             1,
-   /*Bit8u  MemoryModel*/               VBE_MEMORYMODEL_DIRECT_COLOR,
-   /*Bit8u  BankSize*/                  0,
-   /*Bit8u  NumberOfImagePages*/        3,
-   /*Bit8u  Reserved_page*/             0,
-// Direct Color fields (required for direct/6 and YUV/7 memory models)
-   /*Bit8u  RedMaskSize*/               5,
-   /*Bit8u  RedFieldPosition*/          10,
-   /*Bit8u  GreenMaskSize*/             5,
-   /*Bit8u  GreenFieldPosition*/        5,
-   /*Bit8u  BlueMaskSize*/              5,
-   /*Bit8u  BlueFieldPosition*/         0,
-   /*Bit8u  RsvdMaskSize*/              1,
-   /*Bit8u  RsvdFieldPosition*/         15,
-   /*Bit8u  DirectColorModeInfo*/       0,
-// Mandatory information for VBE 2.0 and above
-#ifdef VBE_HAVE_LFB
-   /*Bit32u PhysBasePtr*/               VBE_DISPI_LFB_PHYSICAL_ADDRESS,
-#else
-   /*Bit32u PhysBasePtr*/               0,
-#endif
-   /*Bit32u OffScreenMemOffset*/        0,
-   /*Bit16u OffScreenMemSize*/          0,
-// Mandatory information for VBE 3.0 and above
-   /*Bit16u LinBytesPerScanLine*/       800*2,
-   /*Bit8u  BnkNumberOfPages*/          0,
-   /*Bit8u  LinNumberOfPages*/          0,
-   /*Bit8u  LinRedMaskSize*/            5,
-   /*Bit8u  LinRedFieldPosition*/       10,
-   /*Bit8u  LinGreenMaskSize*/          5,
-   /*Bit8u  LinGreenFieldPosition*/     5,
-   /*Bit8u  LinBlueMaskSize*/           5,
-   /*Bit8u  LinBlueFieldPosition*/      0,
-   /*Bit8u  LinRsvdMaskSize*/           1,
-   /*Bit8u  LinRsvdFieldPosition*/      15,
-   /*Bit32u MaxPixelClock*/             0,
-/*} ModeInfoBlock;*/
-                }
-        },
-
-        {
-                VBE_VESA_MODE_1024X768X1555,
-                {
-/*typedef struct ModeInfoBlock
-{*/
-// Mandatory information for all VBE revisions
-   /*Bit16u ModeAttributes*/            VBE_MODE_ATTRIBUTE_SUPPORTED |
-                                        VBE_MODE_ATTRIBUTE_EXTENDED_INFORMATION_AVAILABLE |
-                                        VBE_MODE_ATTRIBUTE_COLOR_MODE |
-#ifdef VBE_HAVE_LFB
-                                        VBE_MODE_ATTRIBUTE_LINEAR_FRAME_BUFFER_MODE |
-#endif
-                                        VBE_MODE_ATTRIBUTE_GRAPHICS_MODE,
-   /*Bit8u  WinAAttributes*/            VBE_WINDOW_ATTRIBUTE_RELOCATABLE |
-                                        VBE_WINDOW_ATTRIBUTE_READABLE |
-                                        VBE_WINDOW_ATTRIBUTE_WRITEABLE,
-   /*Bit8u  WinBAttributes*/            0,
-   /*Bit16u WinGranularity*/            VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinSize*/                   VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinASegment*/               VGAMEM_GRAPH,
-   /*Bit16u WinBSegment*/               0,
-   /*Bit32u WinFuncPtr*/                0,
-   /*Bit16u BytesPerScanLine*/          1024*2,
-// Mandatory information for VBE 1.2 and above
-   /*Bit16u XResolution*/               1024,
-   /*Bit16u YResolution*/               768,
-   /*Bit8u  XCharSize*/                 8,
-   /*Bit8u  YCharSize*/                 16,
-   /*Bit8u  NumberOfPlanes*/            1,
-   /*Bit8u  BitsPerPixel*/              15,
-   /*Bit8u  NumberOfBanks*/             1,
-   /*Bit8u  MemoryModel*/               VBE_MEMORYMODEL_DIRECT_COLOR,
-   /*Bit8u  BankSize*/                  0,
-   /*Bit8u  NumberOfImagePages*/        1,
-   /*Bit8u  Reserved_page*/             0,
-// Direct Color fields (required for direct/6 and YUV/7 memory models)
-   /*Bit8u  RedMaskSize*/               5,
-   /*Bit8u  RedFieldPosition*/          10,
-   /*Bit8u  GreenMaskSize*/             5,
-   /*Bit8u  GreenFieldPosition*/        5,
-   /*Bit8u  BlueMaskSize*/              5,
-   /*Bit8u  BlueFieldPosition*/         0,
-   /*Bit8u  RsvdMaskSize*/              1,
-   /*Bit8u  RsvdFieldPosition*/         15,
-   /*Bit8u  DirectColorModeInfo*/       0,
-// Mandatory information for VBE 2.0 and above
-#ifdef VBE_HAVE_LFB
-   /*Bit32u PhysBasePtr*/               VBE_DISPI_LFB_PHYSICAL_ADDRESS,
-#else
-   /*Bit32u PhysBasePtr*/               0,
-#endif
-   /*Bit32u OffScreenMemOffset*/        0,
-   /*Bit16u OffScreenMemSize*/          0,
-// Mandatory information for VBE 3.0 and above
-   /*Bit16u LinBytesPerScanLine*/       1024*2,
-   /*Bit8u  BnkNumberOfPages*/          0,
-   /*Bit8u  LinNumberOfPages*/          0,
-   /*Bit8u  LinRedMaskSize*/            5,
-   /*Bit8u  LinRedFieldPosition*/       10,
-   /*Bit8u  LinGreenMaskSize*/          5,
-   /*Bit8u  LinGreenFieldPosition*/     5,
-   /*Bit8u  LinBlueMaskSize*/           5,
-   /*Bit8u  LinBlueFieldPosition*/      0,
-   /*Bit8u  LinRsvdMaskSize*/           1,
-   /*Bit8u  LinRsvdFieldPosition*/      15,
-   /*Bit32u MaxPixelClock*/             0,
-/*} ModeInfoBlock;*/
-                }
-        },
-
-        {
-                VBE_VESA_MODE_640X480X565,
-                {
-/*typedef struct ModeInfoBlock
-{*/
-// Mandatory information for all VBE revisions
-   /*Bit16u ModeAttributes*/            VBE_MODE_ATTRIBUTE_SUPPORTED |
-                                        VBE_MODE_ATTRIBUTE_EXTENDED_INFORMATION_AVAILABLE |
-                                        VBE_MODE_ATTRIBUTE_COLOR_MODE |
-#ifdef VBE_HAVE_LFB
-                                        VBE_MODE_ATTRIBUTE_LINEAR_FRAME_BUFFER_MODE |
-#endif
-                                        VBE_MODE_ATTRIBUTE_GRAPHICS_MODE,
-   /*Bit8u  WinAAttributes*/            VBE_WINDOW_ATTRIBUTE_RELOCATABLE |
-                                        VBE_WINDOW_ATTRIBUTE_READABLE |
-                                        VBE_WINDOW_ATTRIBUTE_WRITEABLE,
-   /*Bit8u  WinBAttributes*/            0,
-   /*Bit16u WinGranularity*/            VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinSize*/                   VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinASegment*/               VGAMEM_GRAPH,
-   /*Bit16u WinBSegment*/               0,
-   /*Bit32u WinFuncPtr*/                0,
-   /*Bit16u BytesPerScanLine*/          640*2,
-// Mandatory information for VBE 1.2 and above
-   /*Bit16u XResolution*/               640,
-   /*Bit16u YResolution*/               480,
-   /*Bit8u  XCharSize*/                 8,
-   /*Bit8u  YCharSize*/                 16,
-   /*Bit8u  NumberOfPlanes*/            1,
-   /*Bit8u  BitsPerPixel*/              16,
-   /*Bit8u  NumberOfBanks*/             1,
-   /*Bit8u  MemoryModel*/               VBE_MEMORYMODEL_DIRECT_COLOR,
-   /*Bit8u  BankSize*/                  0,
-   /*Bit8u  NumberOfImagePages*/        5,
-   /*Bit8u  Reserved_page*/             0,
-// Direct Color fields (required for direct/6 and YUV/7 memory models)
-   /*Bit8u  RedMaskSize*/               5,
-   /*Bit8u  RedFieldPosition*/          11,
-   /*Bit8u  GreenMaskSize*/             6,
-   /*Bit8u  GreenFieldPosition*/        5,
-   /*Bit8u  BlueMaskSize*/              5,
-   /*Bit8u  BlueFieldPosition*/         0,
-   /*Bit8u  RsvdMaskSize*/              0,
-   /*Bit8u  RsvdFieldPosition*/         0,
-   /*Bit8u  DirectColorModeInfo*/       0,
-// Mandatory information for VBE 2.0 and above
-#ifdef VBE_HAVE_LFB
-   /*Bit32u PhysBasePtr*/               VBE_DISPI_LFB_PHYSICAL_ADDRESS,
-#else
-   /*Bit32u PhysBasePtr*/               0,
-#endif
-   /*Bit32u OffScreenMemOffset*/        0,
-   /*Bit16u OffScreenMemSize*/          0,
-// Mandatory information for VBE 3.0 and above
-   /*Bit16u LinBytesPerScanLine*/       640*2,
-   /*Bit8u  BnkNumberOfPages*/          0,
-   /*Bit8u  LinNumberOfPages*/          0,
-   /*Bit8u  LinRedMaskSize*/            5,
-   /*Bit8u  LinRedFieldPosition*/       11,
-   /*Bit8u  LinGreenMaskSize*/          6,
-   /*Bit8u  LinGreenFieldPosition*/     5,
-   /*Bit8u  LinBlueMaskSize*/           5,
-   /*Bit8u  LinBlueFieldPosition*/      0,
-   /*Bit8u  LinRsvdMaskSize*/           0,
-   /*Bit8u  LinRsvdFieldPosition*/      0,
-   /*Bit32u MaxPixelClock*/             0,
-/*} ModeInfoBlock;*/
-                }
-        },
-
-        {
-                VBE_VESA_MODE_800X600X565,
-                {
-/*typedef struct ModeInfoBlock
-{*/
-// Mandatory information for all VBE revisions
-   /*Bit16u ModeAttributes*/            VBE_MODE_ATTRIBUTE_SUPPORTED |
-                                        VBE_MODE_ATTRIBUTE_EXTENDED_INFORMATION_AVAILABLE |
-                                        VBE_MODE_ATTRIBUTE_COLOR_MODE |
-#ifdef VBE_HAVE_LFB
-                                        VBE_MODE_ATTRIBUTE_LINEAR_FRAME_BUFFER_MODE |
-#endif
-                                        VBE_MODE_ATTRIBUTE_GRAPHICS_MODE,
-   /*Bit8u  WinAAttributes*/            VBE_WINDOW_ATTRIBUTE_RELOCATABLE |
-                                        VBE_WINDOW_ATTRIBUTE_READABLE |
-                                        VBE_WINDOW_ATTRIBUTE_WRITEABLE,
-   /*Bit8u  WinBAttributes*/            0,
-   /*Bit16u WinGranularity*/            VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinSize*/                   VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinASegment*/               VGAMEM_GRAPH,
-   /*Bit16u WinBSegment*/               0,
-   /*Bit32u WinFuncPtr*/                0,
-   /*Bit16u BytesPerScanLine*/          800*2,
-// Mandatory information for VBE 1.2 and above
-   /*Bit16u XResolution*/               800,
-   /*Bit16u YResolution*/               600,
-   /*Bit8u  XCharSize*/                 8,
-   /*Bit8u  YCharSize*/                 16,
-   /*Bit8u  NumberOfPlanes*/            1,
-   /*Bit8u  BitsPerPixel*/              16,
-   /*Bit8u  NumberOfBanks*/             1,
-   /*Bit8u  MemoryModel*/               VBE_MEMORYMODEL_DIRECT_COLOR,
-   /*Bit8u  BankSize*/                  0,
-   /*Bit8u  NumberOfImagePages*/        3,
-   /*Bit8u  Reserved_page*/             0,
-// Direct Color fields (required for direct/6 and YUV/7 memory models)
-   /*Bit8u  RedMaskSize*/               5,
-   /*Bit8u  RedFieldPosition*/          11,
-   /*Bit8u  GreenMaskSize*/             6,
-   /*Bit8u  GreenFieldPosition*/        5,
-   /*Bit8u  BlueMaskSize*/              5,
-   /*Bit8u  BlueFieldPosition*/         0,
-   /*Bit8u  RsvdMaskSize*/              0,
-   /*Bit8u  RsvdFieldPosition*/         0,
-   /*Bit8u  DirectColorModeInfo*/       0,
-// Mandatory information for VBE 2.0 and above
-#ifdef VBE_HAVE_LFB
-   /*Bit32u PhysBasePtr*/               VBE_DISPI_LFB_PHYSICAL_ADDRESS,
-#else
-   /*Bit32u PhysBasePtr*/               0,
-#endif
-   /*Bit32u OffScreenMemOffset*/        0,
-   /*Bit16u OffScreenMemSize*/          0,
-// Mandatory information for VBE 3.0 and above
-   /*Bit16u LinBytesPerScanLine*/       800*2,
-   /*Bit8u  BnkNumberOfPages*/          0,
-   /*Bit8u  LinNumberOfPages*/          0,
-   /*Bit8u  LinRedMaskSize*/            5,
-   /*Bit8u  LinRedFieldPosition*/       11,
-   /*Bit8u  LinGreenMaskSize*/          6,
-   /*Bit8u  LinGreenFieldPosition*/     5,
-   /*Bit8u  LinBlueMaskSize*/           5,
-   /*Bit8u  LinBlueFieldPosition*/      0,
-   /*Bit8u  LinRsvdMaskSize*/           0,
-   /*Bit8u  LinRsvdFieldPosition*/      0,
-   /*Bit32u MaxPixelClock*/             0,
-/*} ModeInfoBlock;*/
-                }
-        },
-
-        {
-                VBE_VESA_MODE_1024X768X565,
-                {
-/*typedef struct ModeInfoBlock
-{*/
-// Mandatory information for all VBE revisions
-   /*Bit16u ModeAttributes*/            VBE_MODE_ATTRIBUTE_SUPPORTED |
-                                        VBE_MODE_ATTRIBUTE_EXTENDED_INFORMATION_AVAILABLE |
-                                        VBE_MODE_ATTRIBUTE_COLOR_MODE |
-#ifdef VBE_HAVE_LFB
-                                        VBE_MODE_ATTRIBUTE_LINEAR_FRAME_BUFFER_MODE |
-#endif
-                                        VBE_MODE_ATTRIBUTE_GRAPHICS_MODE,
-   /*Bit8u  WinAAttributes*/            VBE_WINDOW_ATTRIBUTE_RELOCATABLE |
-                                        VBE_WINDOW_ATTRIBUTE_READABLE |
-                                        VBE_WINDOW_ATTRIBUTE_WRITEABLE,
-   /*Bit8u  WinBAttributes*/            0,
-   /*Bit16u WinGranularity*/            VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinSize*/                   VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinASegment*/               VGAMEM_GRAPH,
-   /*Bit16u WinBSegment*/               0,
-   /*Bit32u WinFuncPtr*/                0,
-   /*Bit16u BytesPerScanLine*/          1024*2,
-// Mandatory information for VBE 1.2 and above
-   /*Bit16u XResolution*/               1024,
-   /*Bit16u YResolution*/               768,
-   /*Bit8u  XCharSize*/                 8,
-   /*Bit8u  YCharSize*/                 16,
-   /*Bit8u  NumberOfPlanes*/            1,
-   /*Bit8u  BitsPerPixel*/              16,
-   /*Bit8u  NumberOfBanks*/             1,
-   /*Bit8u  MemoryModel*/               VBE_MEMORYMODEL_DIRECT_COLOR,
-   /*Bit8u  BankSize*/                  0,
-   /*Bit8u  NumberOfImagePages*/        1,
-   /*Bit8u  Reserved_page*/             0,
-// Direct Color fields (required for direct/6 and YUV/7 memory models)
-   /*Bit8u  RedMaskSize*/               5,
-   /*Bit8u  RedFieldPosition*/          11,
-   /*Bit8u  GreenMaskSize*/             6,
-   /*Bit8u  GreenFieldPosition*/        5,
-   /*Bit8u  BlueMaskSize*/              5,
-   /*Bit8u  BlueFieldPosition*/         0,
-   /*Bit8u  RsvdMaskSize*/              0,
-   /*Bit8u  RsvdFieldPosition*/         0,
-   /*Bit8u  DirectColorModeInfo*/       0,
-// Mandatory information for VBE 2.0 and above
-#ifdef VBE_HAVE_LFB
-   /*Bit32u PhysBasePtr*/               VBE_DISPI_LFB_PHYSICAL_ADDRESS,
-#else
-   /*Bit32u PhysBasePtr*/               0,
-#endif
-   /*Bit32u OffScreenMemOffset*/        0,
-   /*Bit16u OffScreenMemSize*/          0,
-// Mandatory information for VBE 3.0 and above
-   /*Bit16u LinBytesPerScanLine*/       1024*2,
-   /*Bit8u  BnkNumberOfPages*/          0,
-   /*Bit8u  LinNumberOfPages*/          0,
-   /*Bit8u  LinRedMaskSize*/            5,
-   /*Bit8u  LinRedFieldPosition*/       11,
-   /*Bit8u  LinGreenMaskSize*/          6,
-   /*Bit8u  LinGreenFieldPosition*/     5,
-   /*Bit8u  LinBlueMaskSize*/           5,
-   /*Bit8u  LinBlueFieldPosition*/      0,
-   /*Bit8u  LinRsvdMaskSize*/           0,
-   /*Bit8u  LinRsvdFieldPosition*/      0,
-   /*Bit32u MaxPixelClock*/             0,
-/*} ModeInfoBlock;*/
-                }
-        },
+typedef struct {
+	Bit16u bitspp;
+	ModeInfoBlockCompact info;
+} ModeInfoBlockCompactProto;
 
-        {
-                VBE_VESA_MODE_640X480X888,
+static ModeInfoBlockCompactProto mode_proto_list[]=
+{
+	{
+	// Format RGB 5 6 5
+		16,
                 {
-/*typedef struct ModeInfoBlock
-{*/
 // Mandatory information for all VBE revisions
    /*Bit16u ModeAttributes*/            VBE_MODE_ATTRIBUTE_SUPPORTED |
                                         VBE_MODE_ATTRIBUTE_EXTENDED_INFORMATION_AVAILABLE |
                                         VBE_MODE_ATTRIBUTE_COLOR_MODE |
-#ifdef VBE_HAVE_LFB
                                         VBE_MODE_ATTRIBUTE_LINEAR_FRAME_BUFFER_MODE |
-#endif
-                                        VBE_MODE_ATTRIBUTE_GRAPHICS_MODE,
-   /*Bit8u  WinAAttributes*/            VBE_WINDOW_ATTRIBUTE_RELOCATABLE |
-                                        VBE_WINDOW_ATTRIBUTE_READABLE |
-                                        VBE_WINDOW_ATTRIBUTE_WRITEABLE,
+                                        VBE_MODE_ATTRIBUTE_GRAPHICS_MODE |
+					0x60,
+   /*Bit8u  WinAAttributes*/            0,
    /*Bit8u  WinBAttributes*/            0,
-   /*Bit16u WinGranularity*/            VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinSize*/                   VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinASegment*/               VGAMEM_GRAPH,
+   /*Bit16u WinGranularity*/            0,
+   /*Bit16u WinSize*/                   0,
+   /*Bit16u WinASegment*/               0,
    /*Bit16u WinBSegment*/               0,
    /*Bit32u WinFuncPtr*/                0,
-   /*Bit16u BytesPerScanLine*/          640*3,
+   /*Bit16u BytesPerScanLine*/          640*2,
 // Mandatory information for VBE 1.2 and above
    /*Bit16u XResolution*/               640,
    /*Bit16u YResolution*/               480,
    /*Bit8u  XCharSize*/                 8,
    /*Bit8u  YCharSize*/                 16,
    /*Bit8u  NumberOfPlanes*/            1,
-   /*Bit8u  BitsPerPixel*/              24,
-   /*Bit8u  NumberOfBanks*/             1,
-   /*Bit8u  MemoryModel*/               VBE_MEMORYMODEL_DIRECT_COLOR,
-   /*Bit8u  BankSize*/                  0,
-   /*Bit8u  NumberOfImagePages*/        3,
-   /*Bit8u  Reserved_page*/             0,
-// Direct Color fields (required for direct/6 and YUV/7 memory models)
-   /*Bit8u  RedMaskSize*/               8,
-   /*Bit8u  RedFieldPosition*/          16,
-   /*Bit8u  GreenMaskSize*/             8,
-   /*Bit8u  GreenFieldPosition*/        8,
-   /*Bit8u  BlueMaskSize*/              8,
-   /*Bit8u  BlueFieldPosition*/         0,
-   /*Bit8u  RsvdMaskSize*/              0,
-   /*Bit8u  RsvdFieldPosition*/         0,
-   /*Bit8u  DirectColorModeInfo*/       0,
-// Mandatory information for VBE 2.0 and above
-#ifdef VBE_HAVE_LFB
-   /*Bit32u PhysBasePtr*/               VBE_DISPI_LFB_PHYSICAL_ADDRESS,
-#else
-   /*Bit32u PhysBasePtr*/               0,
-#endif
-   /*Bit32u OffScreenMemOffset*/        0,
-   /*Bit16u OffScreenMemSize*/          0,
-// Mandatory information for VBE 3.0 and above
-   /*Bit16u LinBytesPerScanLine*/       640*3,
-   /*Bit8u  BnkNumberOfPages*/          0,
-   /*Bit8u  LinNumberOfPages*/          0,
-   /*Bit8u  LinRedMaskSize*/            8,
-   /*Bit8u  LinRedFieldPosition*/       16,
-   /*Bit8u  LinGreenMaskSize*/          8,
-   /*Bit8u  LinGreenFieldPosition*/     8,
-   /*Bit8u  LinBlueMaskSize*/           8,
-   /*Bit8u  LinBlueFieldPosition*/      0,
-   /*Bit8u  LinRsvdMaskSize*/           0,
-   /*Bit8u  LinRsvdFieldPosition*/      0,
-   /*Bit32u MaxPixelClock*/             0,
-/*} ModeInfoBlock;*/
-                }
-        },
-
-        {
-                VBE_VESA_MODE_800X600X888,
-                {
-/*typedef struct ModeInfoBlock
-{*/
-// Mandatory information for all VBE revisions
-   /*Bit16u ModeAttributes*/            VBE_MODE_ATTRIBUTE_SUPPORTED |
-                                        VBE_MODE_ATTRIBUTE_EXTENDED_INFORMATION_AVAILABLE |
-                                        VBE_MODE_ATTRIBUTE_COLOR_MODE |
-#ifdef VBE_HAVE_LFB
-                                        VBE_MODE_ATTRIBUTE_LINEAR_FRAME_BUFFER_MODE |
-#endif
-                                        VBE_MODE_ATTRIBUTE_GRAPHICS_MODE,
-   /*Bit8u  WinAAttributes*/            VBE_WINDOW_ATTRIBUTE_RELOCATABLE |
-                                        VBE_WINDOW_ATTRIBUTE_READABLE |
-                                        VBE_WINDOW_ATTRIBUTE_WRITEABLE,
-   /*Bit8u  WinBAttributes*/            0,
-   /*Bit16u WinGranularity*/            VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinSize*/                   VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinASegment*/               VGAMEM_GRAPH,
-   /*Bit16u WinBSegment*/               0,
-   /*Bit32u WinFuncPtr*/                0,
-   /*Bit16u BytesPerScanLine*/          800*3,
-// Mandatory information for VBE 1.2 and above
-   /*Bit16u XResolution*/               800,
-   /*Bit16u YResolution*/               600,
-   /*Bit8u  XCharSize*/                 8,
-   /*Bit8u  YCharSize*/                 16,
-   /*Bit8u  NumberOfPlanes*/            1,
-   /*Bit8u  BitsPerPixel*/              24,
-   /*Bit8u  NumberOfBanks*/             1,
-   /*Bit8u  MemoryModel*/               VBE_MEMORYMODEL_DIRECT_COLOR,
-   /*Bit8u  BankSize*/                  0,
-   /*Bit8u  NumberOfImagePages*/        1,
-   /*Bit8u  Reserved_page*/             0,
-// Direct Color fields (required for direct/6 and YUV/7 memory models)
-   /*Bit8u  RedMaskSize*/               8,
-   /*Bit8u  RedFieldPosition*/          16,
-   /*Bit8u  GreenMaskSize*/             8,
-   /*Bit8u  GreenFieldPosition*/        8,
-   /*Bit8u  BlueMaskSize*/              8,
-   /*Bit8u  BlueFieldPosition*/         0,
-   /*Bit8u  RsvdMaskSize*/              0,
-   /*Bit8u  RsvdFieldPosition*/         0,
-   /*Bit8u  DirectColorModeInfo*/       0,
-// Mandatory information for VBE 2.0 and above
-#ifdef VBE_HAVE_LFB
-   /*Bit32u PhysBasePtr*/               VBE_DISPI_LFB_PHYSICAL_ADDRESS,
-#else
-   /*Bit32u PhysBasePtr*/               0,
-#endif
-   /*Bit32u OffScreenMemOffset*/        0,
-   /*Bit16u OffScreenMemSize*/          0,
-// Mandatory information for VBE 3.0 and above
-   /*Bit16u LinBytesPerScanLine*/       800*3,
-   /*Bit8u  BnkNumberOfPages*/          0,
-   /*Bit8u  LinNumberOfPages*/          0,
-   /*Bit8u  LinRedMaskSize*/            8,
-   /*Bit8u  LinRedFieldPosition*/       16,
-   /*Bit8u  LinGreenMaskSize*/          8,
-   /*Bit8u  LinGreenFieldPosition*/     8,
-   /*Bit8u  LinBlueMaskSize*/           8,
-   /*Bit8u  LinBlueFieldPosition*/      0,
-   /*Bit8u  LinRsvdMaskSize*/           0,
-   /*Bit8u  LinRsvdFieldPosition*/      0,
-   /*Bit32u MaxPixelClock*/             0,
-/*} ModeInfoBlock;*/
-                }
-        },
-
-        {
-                VBE_VESA_MODE_1024X768X888,
-                {
-/*typedef struct ModeInfoBlock
-{*/
-// Mandatory information for all VBE revisions
-   /*Bit16u ModeAttributes*/            VBE_MODE_ATTRIBUTE_SUPPORTED |
-                                        VBE_MODE_ATTRIBUTE_EXTENDED_INFORMATION_AVAILABLE |
-                                        VBE_MODE_ATTRIBUTE_COLOR_MODE |
-#ifdef VBE_HAVE_LFB
-                                        VBE_MODE_ATTRIBUTE_LINEAR_FRAME_BUFFER_MODE |
-#endif
-                                        VBE_MODE_ATTRIBUTE_GRAPHICS_MODE,
-   /*Bit8u  WinAAttributes*/            VBE_WINDOW_ATTRIBUTE_RELOCATABLE |
-                                        VBE_WINDOW_ATTRIBUTE_READABLE |
-                                        VBE_WINDOW_ATTRIBUTE_WRITEABLE,
-   /*Bit8u  WinBAttributes*/            0,
-   /*Bit16u WinGranularity*/            VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinSize*/                   VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinASegment*/               VGAMEM_GRAPH,
-   /*Bit16u WinBSegment*/               0,
-   /*Bit32u WinFuncPtr*/                0,
-   /*Bit16u BytesPerScanLine*/          1024*3,
-// Mandatory information for VBE 1.2 and above
-   /*Bit16u XResolution*/               1024,
-   /*Bit16u YResolution*/               768,
-   /*Bit8u  XCharSize*/                 8,
-   /*Bit8u  YCharSize*/                 16,
-   /*Bit8u  NumberOfPlanes*/            1,
-   /*Bit8u  BitsPerPixel*/              24,
+   /*Bit8u  BitsPerPixel*/              16,
    /*Bit8u  NumberOfBanks*/             1,
    /*Bit8u  MemoryModel*/               VBE_MEMORYMODEL_DIRECT_COLOR,
    /*Bit8u  BankSize*/                  0,
-   /*Bit8u  NumberOfImagePages*/        0,
+   /*Bit8u  NumberOfImagePages*/        5,
    /*Bit8u  Reserved_page*/             0,
 // Direct Color fields (required for direct/6 and YUV/7 memory models)
-   /*Bit8u  RedMaskSize*/               8,
-   /*Bit8u  RedFieldPosition*/          16,
-   /*Bit8u  GreenMaskSize*/             8,
-   /*Bit8u  GreenFieldPosition*/        8,
-   /*Bit8u  BlueMaskSize*/              8,
+   /*Bit8u  RedMaskSize*/               5,
+   /*Bit8u  RedFieldPosition*/          11,
+   /*Bit8u  GreenMaskSize*/             6,
+   /*Bit8u  GreenFieldPosition*/        5,
+   /*Bit8u  BlueMaskSize*/              5,
    /*Bit8u  BlueFieldPosition*/         0,
    /*Bit8u  RsvdMaskSize*/              0,
    /*Bit8u  RsvdFieldPosition*/         0,
-   /*Bit8u  DirectColorModeInfo*/       0,
+   /*Bit8u  DirectColorModeInfo*/       VBE_DIRECTCOLOR_RESERVED_BITS_AVAILABLE,
 // Mandatory information for VBE 2.0 and above
-#ifdef VBE_HAVE_LFB
-   /*Bit32u PhysBasePtr*/               VBE_DISPI_LFB_PHYSICAL_ADDRESS,
-#else
    /*Bit32u PhysBasePtr*/               0,
-#endif
    /*Bit32u OffScreenMemOffset*/        0,
    /*Bit16u OffScreenMemSize*/          0,
 // Mandatory information for VBE 3.0 and above
-   /*Bit16u LinBytesPerScanLine*/       1024*3,
-   /*Bit8u  BnkNumberOfPages*/          0,
-   /*Bit8u  LinNumberOfPages*/          0,
-   /*Bit8u  LinRedMaskSize*/            8,
-   /*Bit8u  LinRedFieldPosition*/       16,
-   /*Bit8u  LinGreenMaskSize*/          8,
-   /*Bit8u  LinGreenFieldPosition*/     8,
-   /*Bit8u  LinBlueMaskSize*/           8,
+   /*Bit16u LinBytesPerScanLine*/       640*2,
+   /*Bit8u  BnkNumberOfPages*/          1,
+   /*Bit8u  LinNumberOfPages*/          1,
+   /*Bit8u  LinRedMaskSize*/            5,
+   /*Bit8u  LinRedFieldPosition*/       11,
+   /*Bit8u  LinGreenMaskSize*/          6,
+   /*Bit8u  LinGreenFieldPosition*/     5,
+   /*Bit8u  LinBlueMaskSize*/           5,
    /*Bit8u  LinBlueFieldPosition*/      0,
    /*Bit8u  LinRsvdMaskSize*/           0,
    /*Bit8u  LinRsvdFieldPosition*/      0,
    /*Bit32u MaxPixelClock*/             0,
-/*} ModeInfoBlock;*/
                 }
-        },
-
-        {
-                VBE_OWN_MODE_640X480X8888,
+	},
+	{
+	// Format RGB (pad 8) 8 8 8
+		32,
                 {
-/*typedef struct ModeInfoBlock
-{*/
 // Mandatory information for all VBE revisions
    /*Bit16u ModeAttributes*/            VBE_MODE_ATTRIBUTE_SUPPORTED |
                                         VBE_MODE_ATTRIBUTE_EXTENDED_INFORMATION_AVAILABLE |
                                         VBE_MODE_ATTRIBUTE_COLOR_MODE |
-#ifdef VBE_HAVE_LFB
                                         VBE_MODE_ATTRIBUTE_LINEAR_FRAME_BUFFER_MODE |
-#endif
-                                        VBE_MODE_ATTRIBUTE_GRAPHICS_MODE,
-   /*Bit8u  WinAAttributes*/            VBE_WINDOW_ATTRIBUTE_RELOCATABLE |
-                                        VBE_WINDOW_ATTRIBUTE_READABLE |
-                                        VBE_WINDOW_ATTRIBUTE_WRITEABLE,
+                                        VBE_MODE_ATTRIBUTE_GRAPHICS_MODE |
+					0x60,
+   /*Bit8u  WinAAttributes*/            0,
    /*Bit8u  WinBAttributes*/            0,
-   /*Bit16u WinGranularity*/            VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinSize*/                   VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinASegment*/               VGAMEM_GRAPH,
+   /*Bit16u WinGranularity*/            0,
+   /*Bit16u WinSize*/                   0,
+   /*Bit16u WinASegment*/               0,
    /*Bit16u WinBSegment*/               0,
    /*Bit32u WinFuncPtr*/                0,
    /*Bit16u BytesPerScanLine*/          640*4,
@@ -1037,17 +116,13 @@
    /*Bit8u  RsvdFieldPosition*/         24,
    /*Bit8u  DirectColorModeInfo*/       VBE_DIRECTCOLOR_RESERVED_BITS_AVAILABLE,
 // Mandatory information for VBE 2.0 and above
-#ifdef VBE_HAVE_LFB
-   /*Bit32u PhysBasePtr*/               VBE_DISPI_LFB_PHYSICAL_ADDRESS,
-#else
    /*Bit32u PhysBasePtr*/               0,
-#endif
    /*Bit32u OffScreenMemOffset*/        0,
    /*Bit16u OffScreenMemSize*/          0,
 // Mandatory information for VBE 3.0 and above
    /*Bit16u LinBytesPerScanLine*/       640*4,
-   /*Bit8u  BnkNumberOfPages*/          0,
-   /*Bit8u  LinNumberOfPages*/          0,
+   /*Bit8u  BnkNumberOfPages*/          1,
+   /*Bit8u  LinNumberOfPages*/          1,
    /*Bit8u  LinRedMaskSize*/            8,
    /*Bit8u  LinRedFieldPosition*/       16,
    /*Bit8u  LinGreenMaskSize*/          8,
@@ -1057,226 +132,51 @@
    /*Bit8u  LinRsvdMaskSize*/           8,
    /*Bit8u  LinRsvdFieldPosition*/      24,
    /*Bit32u MaxPixelClock*/             0,
-/*} ModeInfoBlock;*/
                 }
-        },
+	}
+};
 
-        {
-                VBE_OWN_MODE_800X600X8888,
-                {
-/*typedef struct ModeInfoBlock
-{*/
-// Mandatory information for all VBE revisions
-   /*Bit16u ModeAttributes*/            VBE_MODE_ATTRIBUTE_SUPPORTED |
-                                        VBE_MODE_ATTRIBUTE_EXTENDED_INFORMATION_AVAILABLE |
-                                        VBE_MODE_ATTRIBUTE_COLOR_MODE |
-#ifdef VBE_HAVE_LFB
-                                        VBE_MODE_ATTRIBUTE_LINEAR_FRAME_BUFFER_MODE |
-#endif
-                                        VBE_MODE_ATTRIBUTE_GRAPHICS_MODE,
-   /*Bit8u  WinAAttributes*/            VBE_WINDOW_ATTRIBUTE_RELOCATABLE |
-                                        VBE_WINDOW_ATTRIBUTE_READABLE |
-                                        VBE_WINDOW_ATTRIBUTE_WRITEABLE,
-   /*Bit8u  WinBAttributes*/            0,
-   /*Bit16u WinGranularity*/            VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinSize*/                   VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinASegment*/               VGAMEM_GRAPH,
-   /*Bit16u WinBSegment*/               0,
-   /*Bit32u WinFuncPtr*/                0,
-   /*Bit16u BytesPerScanLine*/          800*4,
-// Mandatory information for VBE 1.2 and above
-   /*Bit16u XResolution*/               800,
-   /*Bit16u YResolution*/               600,
-   /*Bit8u  XCharSize*/                 8,
-   /*Bit8u  YCharSize*/                 16,
-   /*Bit8u  NumberOfPlanes*/            1,
-   /*Bit8u  BitsPerPixel*/              32,
-   /*Bit8u  NumberOfBanks*/             1,
-   /*Bit8u  MemoryModel*/               VBE_MEMORYMODEL_DIRECT_COLOR,
-   /*Bit8u  BankSize*/                  0,
-   /*Bit8u  NumberOfImagePages*/        1,
-   /*Bit8u  Reserved_page*/             0,
-// Direct Color fields (required for direct/6 and YUV/7 memory models)
-   /*Bit8u  RedMaskSize*/               8,
-   /*Bit8u  RedFieldPosition*/          16,
-   /*Bit8u  GreenMaskSize*/             8,
-   /*Bit8u  GreenFieldPosition*/        8,
-   /*Bit8u  BlueMaskSize*/              8,
-   /*Bit8u  BlueFieldPosition*/         0,
-   /*Bit8u  RsvdMaskSize*/              8,
-   /*Bit8u  RsvdFieldPosition*/         24,
-   /*Bit8u  DirectColorModeInfo*/       VBE_DIRECTCOLOR_RESERVED_BITS_AVAILABLE,
-// Mandatory information for VBE 2.0 and above
-#ifdef VBE_HAVE_LFB
-   /*Bit32u PhysBasePtr*/               VBE_DISPI_LFB_PHYSICAL_ADDRESS,
-#else
-   /*Bit32u PhysBasePtr*/               0,
-#endif
-   /*Bit32u OffScreenMemOffset*/        0,
-   /*Bit16u OffScreenMemSize*/          0,
-// Mandatory information for VBE 3.0 and above
-   /*Bit16u LinBytesPerScanLine*/       800*4,
-   /*Bit8u  BnkNumberOfPages*/          0,
-   /*Bit8u  LinNumberOfPages*/          0,
-   /*Bit8u  LinRedMaskSize*/            8,
-   /*Bit8u  LinRedFieldPosition*/       16,
-   /*Bit8u  LinGreenMaskSize*/          8,
-   /*Bit8u  LinGreenFieldPosition*/     8,
-   /*Bit8u  LinBlueMaskSize*/           8,
-   /*Bit8u  LinBlueFieldPosition*/      0,
-   /*Bit8u  LinRsvdMaskSize*/           8,
-   /*Bit8u  LinRsvdFieldPosition*/      24,
-   /*Bit32u MaxPixelClock*/             0,
-/*} ModeInfoBlock;*/
-                }
-        },
+typedef struct ModeInfoListItem
+{
+        Bit16u mode;
+	Bit16u bitspp;
+	Bit16u bpp;
+	Bit16u xsiz;
+	Bit16u ysiz;
+} ModeInfoListItem;
 
-        {
-                VBE_OWN_MODE_1024X768X8888,
-                {
-/*typedef struct ModeInfoBlock
-{*/
-// Mandatory information for all VBE revisions
-   /*Bit16u ModeAttributes*/            VBE_MODE_ATTRIBUTE_SUPPORTED |
-                                        VBE_MODE_ATTRIBUTE_EXTENDED_INFORMATION_AVAILABLE |
-                                        VBE_MODE_ATTRIBUTE_COLOR_MODE |
-#ifdef VBE_HAVE_LFB
-                                        VBE_MODE_ATTRIBUTE_LINEAR_FRAME_BUFFER_MODE |
-#endif
-                                        VBE_MODE_ATTRIBUTE_GRAPHICS_MODE,
-   /*Bit8u  WinAAttributes*/            VBE_WINDOW_ATTRIBUTE_RELOCATABLE |
-                                        VBE_WINDOW_ATTRIBUTE_READABLE |
-                                        VBE_WINDOW_ATTRIBUTE_WRITEABLE,
-   /*Bit8u  WinBAttributes*/            0,
-   /*Bit16u WinGranularity*/            VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinSize*/                   VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinASegment*/               VGAMEM_GRAPH,
-   /*Bit16u WinBSegment*/               0,
-   /*Bit32u WinFuncPtr*/                0,
-   /*Bit16u BytesPerScanLine*/          1024*4,
-// Mandatory information for VBE 1.2 and above
-   /*Bit16u XResolution*/               1024,
-   /*Bit16u YResolution*/               768,
-   /*Bit8u  XCharSize*/                 8,
-   /*Bit8u  YCharSize*/                 16,
-   /*Bit8u  NumberOfPlanes*/            1,
-   /*Bit8u  BitsPerPixel*/              32,
-   /*Bit8u  NumberOfBanks*/             1,
-   /*Bit8u  MemoryModel*/               VBE_MEMORYMODEL_DIRECT_COLOR,
-   /*Bit8u  BankSize*/                  0,
-   /*Bit8u  NumberOfImagePages*/        1,
-   /*Bit8u  Reserved_page*/             0,
-// Direct Color fields (required for direct/6 and YUV/7 memory models)
-   /*Bit8u  RedMaskSize*/               8,
-   /*Bit8u  RedFieldPosition*/          16,
-   /*Bit8u  GreenMaskSize*/             8,
-   /*Bit8u  GreenFieldPosition*/        8,
-   /*Bit8u  BlueMaskSize*/              8,
-   /*Bit8u  BlueFieldPosition*/         0,
-   /*Bit8u  RsvdMaskSize*/              8,
-   /*Bit8u  RsvdFieldPosition*/         24,
-   /*Bit8u  DirectColorModeInfo*/       VBE_DIRECTCOLOR_RESERVED_BITS_AVAILABLE,
-// Mandatory information for VBE 2.0 and above
-#ifdef VBE_HAVE_LFB
-   /*Bit32u PhysBasePtr*/               VBE_DISPI_LFB_PHYSICAL_ADDRESS,
-#else
-   /*Bit32u PhysBasePtr*/               0,
-#endif
-   /*Bit32u OffScreenMemOffset*/        0,
-   /*Bit16u OffScreenMemSize*/          0,
-// Mandatory information for VBE 3.0 and above
-   /*Bit16u LinBytesPerScanLine*/       1024*4,
-   /*Bit8u  BnkNumberOfPages*/          0,
-   /*Bit8u  LinNumberOfPages*/          0,
-   /*Bit8u  LinRedMaskSize*/            8,
-   /*Bit8u  LinRedFieldPosition*/       16,
-   /*Bit8u  LinGreenMaskSize*/          8,
-   /*Bit8u  LinGreenFieldPosition*/     8,
-   /*Bit8u  LinBlueMaskSize*/           8,
-   /*Bit8u  LinBlueFieldPosition*/      0,
-   /*Bit8u  LinRsvdMaskSize*/           8,
-   /*Bit8u  LinRsvdFieldPosition*/      24,
-   /*Bit32u MaxPixelClock*/             0,
-/*} ModeInfoBlock;*/
-                }
-        },
+static ModeInfoListItem mode_info_list[]=
+{
+// NOTE:  To be paranoid, the modes should be in numeric mode order.
 
-        {
-                VBE_OWN_MODE_320X200X8,
-                {
-/*typedef struct ModeInfoBlock
-{*/
-// Mandatory information for all VBE revisions
-   /*Bit16u ModeAttributes*/            VBE_MODE_ATTRIBUTE_SUPPORTED |
-                                        VBE_MODE_ATTRIBUTE_EXTENDED_INFORMATION_AVAILABLE |
-                                        VBE_MODE_ATTRIBUTE_COLOR_MODE |
-#ifdef VBE_HAVE_LFB
-                                        VBE_MODE_ATTRIBUTE_LINEAR_FRAME_BUFFER_MODE |
-#endif
-                                        VBE_MODE_ATTRIBUTE_GRAPHICS_MODE,
-   /*Bit8u  WinAAttributes*/            VBE_WINDOW_ATTRIBUTE_READABLE |
-                                        VBE_WINDOW_ATTRIBUTE_WRITEABLE,
-   /*Bit8u  WinBAttributes*/            0,
-   /*Bit16u WinGranularity*/            VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinSize*/                   VBE_DISPI_BANK_SIZE_KB,
-   /*Bit16u WinASegment*/               VGAMEM_GRAPH,
-   /*Bit16u WinBSegment*/               0,
-   /*Bit32u WinFuncPtr*/                0,
-   /*Bit16u BytesPerScanLine*/          320,
-// Mandatory information for VBE 1.2 and above
-   /*Bit16u XResolution*/               320,
-   /*Bit16u YResolution*/               200,
-   /*Bit8u  XCharSize*/                 8,
-   /*Bit8u  YCharSize*/                 16,
-   /*Bit8u  NumberOfPlanes*/            1,
-   /*Bit8u  BitsPerPixel*/              8,
-   /*Bit8u  NumberOfBanks*/             1,
-   /*Bit8u  MemoryModel*/               VBE_MEMORYMODEL_PACKED_PIXEL,
-   /*Bit8u  BankSize*/                  0,
-   /*Bit8u  NumberOfImagePages*/        3,
-   /*Bit8u  Reserved_page*/             0,
-// Direct Color fields (required for direct/6 and YUV/7 memory models)
-   /*Bit8u  RedMaskSize*/               0,
-   /*Bit8u  RedFieldPosition*/          0,
-   /*Bit8u  GreenMaskSize*/             0,
-   /*Bit8u  GreenFieldPosition*/        0,
-   /*Bit8u  BlueMaskSize*/              0,
-   /*Bit8u  BlueFieldPosition*/         0,
-   /*Bit8u  RsvdMaskSize*/              0,
-   /*Bit8u  RsvdFieldPosition*/         0,
-   /*Bit8u  DirectColorModeInfo*/       0,
-// Mandatory information for VBE 2.0 and above
-#ifdef VBE_HAVE_LFB
-   /*Bit32u PhysBasePtr*/               VBE_DISPI_LFB_PHYSICAL_ADDRESS,
-#else
-   /*Bit32u PhysBasePtr*/               0,
-#endif
-   /*Bit32u OffScreenMemOffset*/        0,
-   /*Bit16u OffScreenMemSize*/          0,
-// Mandatory information for VBE 3.0 and above
-   /*Bit16u LinBytesPerScanLine*/       320,
-   /*Bit8u  BnkNumberOfPages*/          0,
-   /*Bit8u  LinNumberOfPages*/          0,
-   /*Bit8u  LinRedMaskSize*/            0,
-   /*Bit8u  LinRedFieldPosition*/       0,
-   /*Bit8u  LinGreenMaskSize*/          0,
-   /*Bit8u  LinGreenFieldPosition*/     0,
-   /*Bit8u  LinBlueMaskSize*/           0,
-   /*Bit8u  LinBlueFieldPosition*/      0,
-   /*Bit8u  LinRsvdMaskSize*/           0,
-   /*Bit8u  LinRsvdFieldPosition*/      0,
-   /*Bit32u MaxPixelClock*/             0,
-/*} ModeInfoBlock;*/
-                }
-        },
+// VESA standard modes
+        { VBE_VESA_MODE_320X200X565, 16, 2, 320, 200 },
+        { VBE_VESA_MODE_640X480X565, 16, 2, 640, 480 },
+        { VBE_VESA_MODE_800X600X565, 16, 2, 800, 600 },
+        { VBE_VESA_MODE_1024X768X565, 16, 2, 1024, 768 },
+        { VBE_VESA_MODE_1280X1024X565, 16, 2, 1280, 1024 },
+
+// Custom modes
+        { VBE_OWN_MODE_320X200X8888, 32, 4, 320, 200 },
+        { VBE_OWN_MODE_640X480X8888, 32, 4, 640, 480 },
+        { VBE_OWN_MODE_800X600X8888, 32, 4, 800, 600 },
+        { VBE_OWN_MODE_1024X768X8888, 32, 4, 1024, 768 },
+        { VBE_OWN_MODE_1280X720X565, 16, 2, 1280, 720 },
+        { VBE_OWN_MODE_1280X720X8888, 32, 4, 1280, 720 },
+        { VBE_OWN_MODE_1280X960X565, 16, 2, 1280, 960 },
+        { VBE_OWN_MODE_1280X960X8888, 32, 4, 1280, 960 },
+        { VBE_OWN_MODE_1280X1024X8888, 32, 4, 1280, 1024 },
+        { VBE_OWN_MODE_1600X1200X565, 16, 2, 1600, 1200 },
+        { VBE_OWN_MODE_1600X1200X8888, 32, 4, 1600, 1200 },
+        { VBE_OWN_MODE_1920X1080X565, 16, 2, 1920, 1080 },
+        { VBE_OWN_MODE_1920X1080X8888, 32, 4, 1920, 1080 },
+        { VBE_OWN_MODE_1920X1200X565, 16, 2, 1920, 1200 },
+        { VBE_OWN_MODE_1920X1200X8888, 32, 4, 1920, 1200 },
+        { VBE_OWN_MODE_2048X1536X565, 16, 2, 2048, 1536 },
+        { VBE_OWN_MODE_2048X1536X8888, 32, 4, 2048, 1536 },
 
 /** END OF THE LIST **/
-        {
-                VBE_VESA_MODE_END_OF_LIST,
-                {
-                        0,
-                }
-        }
+        { VBE_VESA_MODE_END_OF_LIST, 0, 0, 0, 0 }
 };
 
 #endif
diff -u vgabios-0.5a/vgabios.c emerald_bios_src/vgabios.c
--- vgabios-0.5a/vgabios.c	2004-07-18 15:22:43.000000000 -0500
+++ emerald_bios_src/vgabios.c	2005-10-03 19:07:16.156489000 -0500
@@ -61,8 +61,10 @@
 static void           write_word();
 static Bit8u          inb();
 static Bit16u         inw();
+static Bit16u         ind();
 static void           outb();
 static void           outw();
+static void           outd();
 
 static Bit16u         get_SS();
 
@@ -110,6 +112,13 @@
 static void biosfn_save_video_state();
 static void biosfn_restore_video_state();
 
+extern Bit32u adapter_bufaddr;
+extern Bit32u adapter_regaddr;
+extern Bit16u adapter_regaddrio;
+extern Bit16u adapter_pcidev;
+extern Bit16u adapter_bufsiz;
+extern Bit8u  adapter_vbe;
+
 // This is for compiling with gcc2 and gcc3
 #define ASM_START #asm
 #define ASM_END   #endasm
@@ -143,55 +152,96 @@
 
 
 vgabios_entry_point:
-           
+
   jmp vgabios_init_func
 
-vgabios_name:
-.ascii	"Plex86/Bochs VGABios"
-.ascii	" "
-.byte	0x00
+// PCI ROM pointer
+// Put PCI ROM at 0x28
+.org 0x18
+.byte   0x28, 0x00
 
 // Info from Bart Oldeman
 .org 0x1e
 .ascii  "IBM"
 .byte   0x00
 
-vgabios_version:
-#ifndef VGABIOS_VERS
-.ascii	"current-cvs"
-#else
-.ascii VGABIOS_VERS
-#endif
-.ascii	" "
-
-vgabios_date:
-.ascii  VGABIOS_DATE
-.byte   0x0a,0x0d
-.byte	0x00
+// PCI ROM definition structure
+.org 0x28
+// PCI ROM structure Signature
+.byte   0x50, 0x43, 0x49, 0x52
+// PCI device vendor id, device id
+//   AMD SimNow Emerald PCI vendor and device id
+.byte   0x22, 0x10, 0x67, 0x20
+// Reserved
+.byte   0x00, 0x00
+// PCI structure length
+.byte   0x18, 0x00
+// PCI structure revision
+.byte   0x00
+// PCI device class id
+//   AMD SimNow Emerald PCI class id
+.byte   0x00, 0x00, 0x03
+// Length in 512 byte blocks (32K)
+.byte   0x40, 0x00
+// PCI BIOS revision
+//   AMD SimNow Emerald PCI BIOS revision
+.byte   0x03, 0x00
+// PCI ROM code type
+.byte   0x00
+// PCI ROM sequence indicator (last ROM)
+.byte   0x80
+// Reserved
+.byte   0x00, 0x00
 
-vgabios_copyright:
-.ascii	"(C) 2003 the LGPL VGABios developers Team"
+vgabios_name:
+.ascii	"AMD SimNow Emerald VGA BIOS v0.3 (C) 2005 AMD"
 .byte	0x0a,0x0d
 .byte	0x00
 
 vgabios_license:
-.ascii	"This VGA/VBE Bios is released under the GNU LGPL"
+.ascii	"License is GNU LGPL, derived from Bochs VGABios 0.5a"
 .byte	0x0a,0x0d
 .byte	0x0a,0x0d
 .byte	0x00
 
-vgabios_website:
-.ascii	"Please visit :"
-.byte	0x0a,0x0d
-;;.ascii  " . http://www.plex86.org"
-;;.byte	0x0a,0x0d
-.ascii	" . http://bochs.sourceforge.net"
-.byte	0x0a,0x0d
-.ascii	" . http://www.nongnu.org/vgabios"
-.byte	0x0a,0x0d
-.byte	0x0a,0x0d
-.byte	0x00
- 
+_adapter_bufaddr:
+.word   0x0000, 0x0000
+
+_adapter_regaddr:
+.word   0x0000, 0x0000
+
+_adapter_regaddrio:
+.word   0x0000, 0x0000
+
+_adapter_pcidev:
+.word   0x0000
+
+_adapter_bufsiz:
+.word   0x0000
+
+_adapter_vbe:
+.byte   0x00
+
+gdt:
+.word   0, 0
+.byte   0, 0, 0, 0
+/* 32-bit prot mode CS */
+.word   0xFFFF, 0
+.byte   0, 0x9A, 0xCF, 0
+/* 32-bit prot mode DS */
+.word   0xFFFF, 0
+.byte   0, 0x92, 0xCF, 0
+/* 16-bit real mode CS */
+.word   0xFFFF, 0
+.byte   0, 0x9E, 0, 0
+/* 16-bit real mode DS */
+.word   0xFFFF, 0
+.byte   0, 0x92, 0, 0
+
+gdtdesc:
+.word   0x27		/* limit */
+.word   gdt, 0xc	/* addr */
+
 
 ;; ============================================================================================
 ;;
@@ -199,6 +249,7 @@
 ;;
 ;; ============================================================================================
 vgabios_init_func:
+   pusha
 
 ;; init vga card
   call init_vga_card
@@ -206,18 +257,12 @@
 ;; init basic bios vars
   call init_bios_area
 
-#ifdef VBE  
 ;; init vbe functions
   call vbe_init  
-#endif
 
 ;; set int10 vect
   SET_INT_VECTOR(0x10, #0xC000, #vgabios_int10_handler)
 
-#ifdef CIRRUS
-  call cirrus_init
-#endif
-
 ;; display splash screen
   call _display_splash_screen
 
@@ -228,15 +273,10 @@
 ;; show info
   call _display_info
 
-#ifdef VBE  
 ;; show vbe info
   call vbe_display_info  
-#endif
 
-#ifdef CIRRUS
-;; show cirrus info
-  call cirrus_display_info
-#endif
+  popa
 
   retf
 ASM_END
@@ -376,6 +416,98 @@
  */
 ASM_START
 init_vga_card:
+// This should be FIRST!!
+//   Probe PCI bus to find adapter reg and buf addrs
+  mov  ax, #0xc000
+  mov  ds, ax
+  mov  si, #0
+init_vga_card_recycle:
+  mov  bx, #0x2c
+  mov  dx, [bx]
+  mov  bx, #0x2e
+  mov  cx, [bx]
+  mov  ax, #0xb102
+  int  0x1a
+  jc   init_vga_panic
+  cmp  ah, #0
+  jne  init_vga_panic
+// Save PCI dev
+  mov  di, #_adapter_pcidev
+  mov  [di], bx
+// Make sure it's the right adapter, i.e. check class code
+//  for VGA enable
+  mov  ax, #0xb108
+  mov  di, #0xa
+  int  0x1a
+  jc   init_vga_panic
+  cmp  cl, #0
+  jne  init_vga_do_recycle
+  mov  ax, #0xb109
+  mov  di, #0x8
+  int  0x1a
+  jc   init_vga_panic
+// Version check!
+  cmp  cl, #0x3
+  jl  init_vga_do_recycle
+  cmp  ch, #0
+  je   init_vga_card_final
+init_vga_do_recycle:
+  inc  si
+  jmp  init_vga_card_recycle
+
+// REALLY fail here
+init_vga_panic:
+  hlt
+  jmp  init_vga_panic
+
+init_vga_card_final:
+// Read out BARs
+  mov  ax, #0xb10a
+  mov  di, #0x18
+  int  0x1a
+  mov  si, #_adapter_regaddrio
+  and  cl, #0xfe
+  .byte 0x66
+  mov  [si], cx
+  mov  ax, #0xb10a
+  mov  di, #0x14
+  int  0x1a
+  mov  si, #_adapter_regaddr
+  .byte 0x66
+  mov  [si], cx
+  mov  ax, #0xb10a
+  mov  di, #0x10
+  int  0x1a
+  mov  si, #_adapter_bufaddr
+  .byte 0x66
+  mov  [si], cx
+// Read out buffer size
+  .byte 0x66
+  mov  cx, #0xffff
+  .word 0xffff
+  mov  ax, #0xb10d
+  int  0x1a
+  mov  ax, #0xb10a
+  int  0x1a
+  .byte 0x66
+  mov  dx, cx
+  .byte 0x66
+  sub  dx, #1
+  .byte 0x66
+  xor  dx, cx
+  .byte 0x66
+  add  dx, #1
+  .byte 0x66
+  mov  cx, [si]
+  mov  si, #_adapter_bufsiz
+  .byte 0x66
+  shr  dx, #17
+  mov  [si], dx
+// Restore buffer BAR
+  mov  ax, #0xb10d
+  int  0x1a
+
+// Do rest of standard VGA init here
 ;; switch to color mode and enable CPU access 480 lines
   mov dx, #0x3C2
   mov al, #0xC3
@@ -389,16 +521,8 @@
   mov al, #0x02
   outb dx,al
 
-  mov  bx, #msg_vga_init
-  push bx
-  call _printf
-  inc  sp
-  inc  sp
   ret
 
-msg_vga_init:
-.ascii "VGABios $Id: vgabios.c,v 1.59 2004/07/18 20:22:43 vruppert Exp $"
-.byte 0x0d,0x0a,0x00
 ASM_END
 
 // --------------------------------------------------------------------------------------------
@@ -468,18 +592,8 @@
  mov ds,ax
  mov si,#vgabios_name
  call _display_string
- mov si,#vgabios_version
- call _display_string
- 
- ;;mov si,#vgabios_copyright
- ;;call _display_string
- ;;mov si,#crlf
- ;;call _display_string
-
  mov si,#vgabios_license
  call _display_string
- mov si,#vgabios_website
- call _display_string
 ASM_END
 }
 
@@ -772,12 +886,6 @@
  Bit8u modeset_ctl,video_ctl,vga_switches;
  Bit16u crtc_addr;
  
-#ifdef VBE
- if (vbe_has_vbe_display()) { 
-   dispi_set_enable(VBE_DISPI_DISABLED);
-  }
-#endif // def VBE
- 
  // The real mode
  mode=mode&0x7f;
 
@@ -888,6 +996,9 @@
  outb(VGAREG_ACTL_ADDRESS,0x20);
  inb(VGAREG_ACTL_RESET);
 
+ // ESB Just in case we're in a non-VGA video mode
+ outd(adapter_regaddrio+4, 0, 0);
+ 
  if(noclearmem==0x00)
   {
    if(vga_modes[line].class==TEXT)
@@ -918,7 +1029,7 @@
  write_word(BIOSMEM_SEG,BIOSMEM_CRTC_ADDRESS,crtc_addr);
  write_byte(BIOSMEM_SEG,BIOSMEM_NB_ROWS,theight-1);
  write_word(BIOSMEM_SEG,BIOSMEM_CHAR_HEIGHT,cheight);
- write_byte(BIOSMEM_SEG,BIOSMEM_VIDEO_CTL,(0x60|noclearmem));
+ write_byte(BIOSMEM_SEG,BIOSMEM_VIDEO_CTL,(0x68|noclearmem));
  write_byte(BIOSMEM_SEG,BIOSMEM_SWITCHES,0xF9);
  write_byte(BIOSMEM_SEG,BIOSMEM_MODESET_CTL,read_byte(BIOSMEM_SEG,BIOSMEM_MODESET_CTL)&0x7f);
 
@@ -3452,6 +3563,24 @@
 ASM_END
 }
 
+  Bit16u
+ind(port)
+  Bit16u port;
+{
+ASM_START
+  push bp
+  mov  bp, sp
+
+    push dx
+    mov  dx, 4[bp]
+    .byte 0x66
+    in   ax, dx
+    pop  dx
+
+  pop  bp
+ASM_END
+}
+
 // --------------------------------------------------------------------------------------------
   void
 outb(port, val)
@@ -3474,7 +3603,6 @@
 ASM_END
 }
 
-// --------------------------------------------------------------------------------------------
   void
 outw(port, val)
   Bit16u port;
@@ -3496,6 +3624,34 @@
 ASM_END
 }
 
+  void
+outd(port, lval, hval)
+  Bit16u port;
+  Bit16u lval;
+  Bit16u hval;
+{
+ASM_START
+  push bp
+  mov  bp, sp
+
+    push ax
+    push dx
+    mov  dx, 4[bp]
+    mov  ax, 8[bp]
+    .byte 0x66
+    shl  ax, #16
+    mov  ax, 6[bp]
+    .byte 0x66
+    out  dx, ax
+    pop  dx
+    pop  ax
+
+  pop  bp
+ASM_END
+}
+
+// --------------------------------------------------------------------------------------------
+
 Bit16u get_SS()
 {
 ASM_START
@@ -3572,10 +3728,6 @@
 #include "vbe.c"
 #endif
 
-#ifdef CIRRUS
-#include "clext.c"
-#endif
-
 // --------------------------------------------------------------------------------------------
 
 ASM_START 
Files vgabios-0.5a/VGABIOS-lgpl-latest.bin and emerald_bios_src/VGABIOS-lgpl-latest.bin differ
Files vgabios-0.5a/VGABIOS-lgpl-latest.debug.bin and emerald_bios_src/VGABIOS-lgpl-latest.debug.bin differ
diff -u vgabios-0.5a/vgatables.h emerald_bios_src/vgatables.h
--- vgabios-0.5a/vgatables.h	2004-07-18 15:25:22.000000000 -0500
+++ emerald_bios_src/vgatables.h	2005-08-31 16:00:04.984467000 -0500
@@ -23,8 +23,6 @@
 #define BIOSMEM_MODESET_CTL   0x89
 #define BIOSMEM_DCC_INDEX     0x8A
 #define BIOSMEM_VS_POINTER    0xA8
-#define BIOSMEM_VBE_FLAG      0xB9
-#define BIOSMEM_VBE_MODE      0xBA
 
 
 /*
